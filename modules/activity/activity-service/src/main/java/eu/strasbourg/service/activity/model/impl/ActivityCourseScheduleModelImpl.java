/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.activity.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.Validator;

import eu.strasbourg.service.activity.model.ActivityCourseSchedule;
import eu.strasbourg.service.activity.model.ActivityCourseScheduleModel;
import eu.strasbourg.service.activity.model.ActivityCourseScheduleSoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ActivityCourseSchedule service. Represents a row in the &quot;activity_ActivityCourseSchedule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ActivityCourseScheduleModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActivityCourseScheduleImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ActivityCourseScheduleImpl
 * @generated
 */
@JSON(strict = true)
public class ActivityCourseScheduleModelImpl
	extends BaseModelImpl<ActivityCourseSchedule>
	implements ActivityCourseScheduleModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a activity course schedule model instance should use the <code>ActivityCourseSchedule</code> interface instead.
	 */
	public static final String TABLE_NAME = "activity_ActivityCourseSchedule";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"activityCourseScheduleId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"activityCoursePlaceId", Types.BIGINT}, {"startTime", Types.VARCHAR},
		{"endTime", Types.VARCHAR}, {"monday", Types.BOOLEAN},
		{"tuesday", Types.BOOLEAN}, {"wednesday", Types.BOOLEAN},
		{"thursday", Types.BOOLEAN}, {"friday", Types.BOOLEAN},
		{"saturday", Types.BOOLEAN}, {"sunday", Types.BOOLEAN},
		{"comments", Types.VARCHAR}, {"periodsIds", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("activityCourseScheduleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("activityCoursePlaceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("startTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("endTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("monday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("tuesday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("wednesday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("thursday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("friday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("saturday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("sunday", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("periodsIds", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table activity_ActivityCourseSchedule (uuid_ VARCHAR(75) null,activityCourseScheduleId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,activityCoursePlaceId LONG,startTime VARCHAR(75) null,endTime VARCHAR(75) null,monday BOOLEAN,tuesday BOOLEAN,wednesday BOOLEAN,thursday BOOLEAN,friday BOOLEAN,saturday BOOLEAN,sunday BOOLEAN,comments STRING null,periodsIds VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table activity_ActivityCourseSchedule";

	public static final String ORDER_BY_JPQL =
		" ORDER BY activityCourseSchedule.activityCourseScheduleId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY activity_ActivityCourseSchedule.activityCourseScheduleId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.activity.service.util.PropsUtil.get(
			"value.object.entity.cache.enabled.eu.strasbourg.service.activity.model.ActivityCourseSchedule"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.activity.service.util.PropsUtil.get(
			"value.object.finder.cache.enabled.eu.strasbourg.service.activity.model.ActivityCourseSchedule"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.activity.service.util.PropsUtil.get(
			"value.object.column.bitmask.enabled.eu.strasbourg.service.activity.model.ActivityCourseSchedule"),
		true);

	public static final long ACTIVITYCOURSEPLACEID_COLUMN_BITMASK = 1L;

	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	public static final long GROUPID_COLUMN_BITMASK = 4L;

	public static final long UUID_COLUMN_BITMASK = 8L;

	public static final long ACTIVITYCOURSESCHEDULEID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActivityCourseSchedule toModel(
		ActivityCourseScheduleSoap soapModel) {

		if (soapModel == null) {
			return null;
		}

		ActivityCourseSchedule model = new ActivityCourseScheduleImpl();

		model.setUuid(soapModel.getUuid());
		model.setActivityCourseScheduleId(
			soapModel.getActivityCourseScheduleId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setActivityCoursePlaceId(soapModel.getActivityCoursePlaceId());
		model.setStartTime(soapModel.getStartTime());
		model.setEndTime(soapModel.getEndTime());
		model.setMonday(soapModel.isMonday());
		model.setTuesday(soapModel.isTuesday());
		model.setWednesday(soapModel.isWednesday());
		model.setThursday(soapModel.isThursday());
		model.setFriday(soapModel.isFriday());
		model.setSaturday(soapModel.isSaturday());
		model.setSunday(soapModel.isSunday());
		model.setComments(soapModel.getComments());
		model.setPeriodsIds(soapModel.getPeriodsIds());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActivityCourseSchedule> toModels(
		ActivityCourseScheduleSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<ActivityCourseSchedule> models =
			new ArrayList<ActivityCourseSchedule>(soapModels.length);

		for (ActivityCourseScheduleSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		eu.strasbourg.service.activity.service.util.PropsUtil.get(
			"lock.expiration.time.eu.strasbourg.service.activity.model.ActivityCourseSchedule"));

	public ActivityCourseScheduleModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _activityCourseScheduleId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setActivityCourseScheduleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _activityCourseScheduleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ActivityCourseSchedule.class;
	}

	@Override
	public String getModelClassName() {
		return ActivityCourseSchedule.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ActivityCourseSchedule, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ActivityCourseSchedule, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ActivityCourseSchedule, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ActivityCourseSchedule)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ActivityCourseSchedule, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ActivityCourseSchedule, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ActivityCourseSchedule)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ActivityCourseSchedule, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ActivityCourseSchedule, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ActivityCourseSchedule>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ActivityCourseSchedule.class.getClassLoader(),
			ActivityCourseSchedule.class, ModelWrapper.class);

		try {
			Constructor<ActivityCourseSchedule> constructor =
				(Constructor<ActivityCourseSchedule>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ActivityCourseSchedule, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ActivityCourseSchedule, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ActivityCourseSchedule, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ActivityCourseSchedule, Object>>();
		Map<String, BiConsumer<ActivityCourseSchedule, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<ActivityCourseSchedule, ?>>();

		attributeGetterFunctions.put(
			"uuid",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"uuid",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object uuidObject) {

					activityCourseSchedule.setUuid((String)uuidObject);
				}

			});
		attributeGetterFunctions.put(
			"activityCourseScheduleId",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getActivityCourseScheduleId();
				}

			});
		attributeSetterBiConsumers.put(
			"activityCourseScheduleId",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object activityCourseScheduleIdObject) {

					activityCourseSchedule.setActivityCourseScheduleId(
						(Long)activityCourseScheduleIdObject);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object groupIdObject) {

					activityCourseSchedule.setGroupId((Long)groupIdObject);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object companyIdObject) {

					activityCourseSchedule.setCompanyId((Long)companyIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object userIdObject) {

					activityCourseSchedule.setUserId((Long)userIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object userNameObject) {

					activityCourseSchedule.setUserName((String)userNameObject);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object createDateObject) {

					activityCourseSchedule.setCreateDate(
						(Date)createDateObject);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object modifiedDateObject) {

					activityCourseSchedule.setModifiedDate(
						(Date)modifiedDateObject);
				}

			});
		attributeGetterFunctions.put(
			"activityCoursePlaceId",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getActivityCoursePlaceId();
				}

			});
		attributeSetterBiConsumers.put(
			"activityCoursePlaceId",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object activityCoursePlaceIdObject) {

					activityCourseSchedule.setActivityCoursePlaceId(
						(Long)activityCoursePlaceIdObject);
				}

			});
		attributeGetterFunctions.put(
			"startTime",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getStartTime();
				}

			});
		attributeSetterBiConsumers.put(
			"startTime",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object startTimeObject) {

					activityCourseSchedule.setStartTime(
						(String)startTimeObject);
				}

			});
		attributeGetterFunctions.put(
			"endTime",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getEndTime();
				}

			});
		attributeSetterBiConsumers.put(
			"endTime",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object endTimeObject) {

					activityCourseSchedule.setEndTime((String)endTimeObject);
				}

			});
		attributeGetterFunctions.put(
			"monday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getMonday();
				}

			});
		attributeSetterBiConsumers.put(
			"monday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object mondayObject) {

					activityCourseSchedule.setMonday((Boolean)mondayObject);
				}

			});
		attributeGetterFunctions.put(
			"tuesday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getTuesday();
				}

			});
		attributeSetterBiConsumers.put(
			"tuesday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object tuesdayObject) {

					activityCourseSchedule.setTuesday((Boolean)tuesdayObject);
				}

			});
		attributeGetterFunctions.put(
			"wednesday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getWednesday();
				}

			});
		attributeSetterBiConsumers.put(
			"wednesday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object wednesdayObject) {

					activityCourseSchedule.setWednesday(
						(Boolean)wednesdayObject);
				}

			});
		attributeGetterFunctions.put(
			"thursday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getThursday();
				}

			});
		attributeSetterBiConsumers.put(
			"thursday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object thursdayObject) {

					activityCourseSchedule.setThursday((Boolean)thursdayObject);
				}

			});
		attributeGetterFunctions.put(
			"friday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getFriday();
				}

			});
		attributeSetterBiConsumers.put(
			"friday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object fridayObject) {

					activityCourseSchedule.setFriday((Boolean)fridayObject);
				}

			});
		attributeGetterFunctions.put(
			"saturday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getSaturday();
				}

			});
		attributeSetterBiConsumers.put(
			"saturday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object saturdayObject) {

					activityCourseSchedule.setSaturday((Boolean)saturdayObject);
				}

			});
		attributeGetterFunctions.put(
			"sunday",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getSunday();
				}

			});
		attributeSetterBiConsumers.put(
			"sunday",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object sundayObject) {

					activityCourseSchedule.setSunday((Boolean)sundayObject);
				}

			});
		attributeGetterFunctions.put(
			"comments",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getComments();
				}

			});
		attributeSetterBiConsumers.put(
			"comments",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object commentsObject) {

					activityCourseSchedule.setComments((String)commentsObject);
				}

			});
		attributeGetterFunctions.put(
			"periodsIds",
			new Function<ActivityCourseSchedule, Object>() {

				@Override
				public Object apply(
					ActivityCourseSchedule activityCourseSchedule) {

					return activityCourseSchedule.getPeriodsIds();
				}

			});
		attributeSetterBiConsumers.put(
			"periodsIds",
			new BiConsumer<ActivityCourseSchedule, Object>() {

				@Override
				public void accept(
					ActivityCourseSchedule activityCourseSchedule,
					Object periodsIdsObject) {

					activityCourseSchedule.setPeriodsIds(
						(String)periodsIdsObject);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getActivityCourseScheduleId() {
		return _activityCourseScheduleId;
	}

	@Override
	public void setActivityCourseScheduleId(long activityCourseScheduleId) {
		_activityCourseScheduleId = activityCourseScheduleId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getActivityCoursePlaceId() {
		return _activityCoursePlaceId;
	}

	@Override
	public void setActivityCoursePlaceId(long activityCoursePlaceId) {
		_columnBitmask |= ACTIVITYCOURSEPLACEID_COLUMN_BITMASK;

		if (!_setOriginalActivityCoursePlaceId) {
			_setOriginalActivityCoursePlaceId = true;

			_originalActivityCoursePlaceId = _activityCoursePlaceId;
		}

		_activityCoursePlaceId = activityCoursePlaceId;
	}

	public long getOriginalActivityCoursePlaceId() {
		return _originalActivityCoursePlaceId;
	}

	@JSON
	@Override
	public String getStartTime() {
		if (_startTime == null) {
			return "";
		}
		else {
			return _startTime;
		}
	}

	@Override
	public void setStartTime(String startTime) {
		_startTime = startTime;
	}

	@JSON
	@Override
	public String getEndTime() {
		if (_endTime == null) {
			return "";
		}
		else {
			return _endTime;
		}
	}

	@Override
	public void setEndTime(String endTime) {
		_endTime = endTime;
	}

	@JSON
	@Override
	public boolean getMonday() {
		return _monday;
	}

	@JSON
	@Override
	public boolean isMonday() {
		return _monday;
	}

	@Override
	public void setMonday(boolean monday) {
		_monday = monday;
	}

	@JSON
	@Override
	public boolean getTuesday() {
		return _tuesday;
	}

	@JSON
	@Override
	public boolean isTuesday() {
		return _tuesday;
	}

	@Override
	public void setTuesday(boolean tuesday) {
		_tuesday = tuesday;
	}

	@JSON
	@Override
	public boolean getWednesday() {
		return _wednesday;
	}

	@JSON
	@Override
	public boolean isWednesday() {
		return _wednesday;
	}

	@Override
	public void setWednesday(boolean wednesday) {
		_wednesday = wednesday;
	}

	@JSON
	@Override
	public boolean getThursday() {
		return _thursday;
	}

	@JSON
	@Override
	public boolean isThursday() {
		return _thursday;
	}

	@Override
	public void setThursday(boolean thursday) {
		_thursday = thursday;
	}

	@JSON
	@Override
	public boolean getFriday() {
		return _friday;
	}

	@JSON
	@Override
	public boolean isFriday() {
		return _friday;
	}

	@Override
	public void setFriday(boolean friday) {
		_friday = friday;
	}

	@JSON
	@Override
	public boolean getSaturday() {
		return _saturday;
	}

	@JSON
	@Override
	public boolean isSaturday() {
		return _saturday;
	}

	@Override
	public void setSaturday(boolean saturday) {
		_saturday = saturday;
	}

	@JSON
	@Override
	public boolean getSunday() {
		return _sunday;
	}

	@JSON
	@Override
	public boolean isSunday() {
		return _sunday;
	}

	@Override
	public void setSunday(boolean sunday) {
		_sunday = sunday;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return "";
		}
		else {
			return _comments;
		}
	}

	@Override
	public String getComments(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getComments(languageId);
	}

	@Override
	public String getComments(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getComments(languageId, useDefault);
	}

	@Override
	public String getComments(String languageId) {
		return LocalizationUtil.getLocalization(getComments(), languageId);
	}

	@Override
	public String getComments(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(
			getComments(), languageId, useDefault);
	}

	@Override
	public String getCommentsCurrentLanguageId() {
		return _commentsCurrentLanguageId;
	}

	@JSON
	@Override
	public String getCommentsCurrentValue() {
		Locale locale = getLocale(_commentsCurrentLanguageId);

		return getComments(locale);
	}

	@Override
	public Map<Locale, String> getCommentsMap() {
		return LocalizationUtil.getLocalizationMap(getComments());
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@Override
	public void setComments(String comments, Locale locale) {
		setComments(comments, locale, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setComments(
		String comments, Locale locale, Locale defaultLocale) {

		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(comments)) {
			setComments(
				LocalizationUtil.updateLocalization(
					getComments(), "Comments", comments, languageId,
					defaultLanguageId));
		}
		else {
			setComments(
				LocalizationUtil.removeLocalization(
					getComments(), "Comments", languageId));
		}
	}

	@Override
	public void setCommentsCurrentLanguageId(String languageId) {
		_commentsCurrentLanguageId = languageId;
	}

	@Override
	public void setCommentsMap(Map<Locale, String> commentsMap) {
		setCommentsMap(commentsMap, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setCommentsMap(
		Map<Locale, String> commentsMap, Locale defaultLocale) {

		if (commentsMap == null) {
			return;
		}

		setComments(
			LocalizationUtil.updateLocalization(
				commentsMap, getComments(), "Comments",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public String getPeriodsIds() {
		if (_periodsIds == null) {
			return "";
		}
		else {
			return _periodsIds;
		}
	}

	@Override
	public void setPeriodsIds(String periodsIds) {
		_periodsIds = periodsIds;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(ActivityCourseSchedule.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), ActivityCourseSchedule.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> commentsMap = getCommentsMap();

		for (Map.Entry<Locale, String> entry : commentsMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(
			new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getComments();

		if (xml == null) {
			return "";
		}

		Locale defaultLocale = LocaleUtil.getSiteDefault();

		return LocalizationUtil.getDefaultLanguageId(xml, defaultLocale);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		Locale defaultLocale = LocaleUtil.fromLanguageId(
			getDefaultLanguageId());

		Locale[] availableLocales = LocaleUtil.fromLanguageIds(
			getAvailableLanguageIds());

		Locale defaultImportLocale = LocalizationUtil.getDefaultImportLocale(
			ActivityCourseSchedule.class.getName(), getPrimaryKey(),
			defaultLocale, availableLocales);

		prepareLocalizedFieldsForImport(defaultImportLocale);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {

		Locale defaultLocale = LocaleUtil.getSiteDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String comments = getComments(defaultLocale);

		if (Validator.isNull(comments)) {
			setComments(getComments(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setComments(
				getComments(defaultLocale), defaultLocale, defaultLocale);
		}
	}

	@Override
	public ActivityCourseSchedule toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ActivityCourseSchedule>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActivityCourseScheduleImpl activityCourseScheduleImpl =
			new ActivityCourseScheduleImpl();

		activityCourseScheduleImpl.setUuid(getUuid());
		activityCourseScheduleImpl.setActivityCourseScheduleId(
			getActivityCourseScheduleId());
		activityCourseScheduleImpl.setGroupId(getGroupId());
		activityCourseScheduleImpl.setCompanyId(getCompanyId());
		activityCourseScheduleImpl.setUserId(getUserId());
		activityCourseScheduleImpl.setUserName(getUserName());
		activityCourseScheduleImpl.setCreateDate(getCreateDate());
		activityCourseScheduleImpl.setModifiedDate(getModifiedDate());
		activityCourseScheduleImpl.setActivityCoursePlaceId(
			getActivityCoursePlaceId());
		activityCourseScheduleImpl.setStartTime(getStartTime());
		activityCourseScheduleImpl.setEndTime(getEndTime());
		activityCourseScheduleImpl.setMonday(isMonday());
		activityCourseScheduleImpl.setTuesday(isTuesday());
		activityCourseScheduleImpl.setWednesday(isWednesday());
		activityCourseScheduleImpl.setThursday(isThursday());
		activityCourseScheduleImpl.setFriday(isFriday());
		activityCourseScheduleImpl.setSaturday(isSaturday());
		activityCourseScheduleImpl.setSunday(isSunday());
		activityCourseScheduleImpl.setComments(getComments());
		activityCourseScheduleImpl.setPeriodsIds(getPeriodsIds());

		activityCourseScheduleImpl.resetOriginalValues();

		return activityCourseScheduleImpl;
	}

	@Override
	public int compareTo(ActivityCourseSchedule activityCourseSchedule) {
		long primaryKey = activityCourseSchedule.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ActivityCourseSchedule)) {
			return false;
		}

		ActivityCourseSchedule activityCourseSchedule =
			(ActivityCourseSchedule)object;

		long primaryKey = activityCourseSchedule.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ActivityCourseScheduleModelImpl activityCourseScheduleModelImpl = this;

		activityCourseScheduleModelImpl._originalUuid =
			activityCourseScheduleModelImpl._uuid;

		activityCourseScheduleModelImpl._originalGroupId =
			activityCourseScheduleModelImpl._groupId;

		activityCourseScheduleModelImpl._setOriginalGroupId = false;

		activityCourseScheduleModelImpl._originalCompanyId =
			activityCourseScheduleModelImpl._companyId;

		activityCourseScheduleModelImpl._setOriginalCompanyId = false;

		activityCourseScheduleModelImpl._setModifiedDate = false;

		activityCourseScheduleModelImpl._originalActivityCoursePlaceId =
			activityCourseScheduleModelImpl._activityCoursePlaceId;

		activityCourseScheduleModelImpl._setOriginalActivityCoursePlaceId =
			false;

		activityCourseScheduleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ActivityCourseSchedule> toCacheModel() {
		ActivityCourseScheduleCacheModel activityCourseScheduleCacheModel =
			new ActivityCourseScheduleCacheModel();

		activityCourseScheduleCacheModel.uuid = getUuid();

		String uuid = activityCourseScheduleCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			activityCourseScheduleCacheModel.uuid = null;
		}

		activityCourseScheduleCacheModel.activityCourseScheduleId =
			getActivityCourseScheduleId();

		activityCourseScheduleCacheModel.groupId = getGroupId();

		activityCourseScheduleCacheModel.companyId = getCompanyId();

		activityCourseScheduleCacheModel.userId = getUserId();

		activityCourseScheduleCacheModel.userName = getUserName();

		String userName = activityCourseScheduleCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			activityCourseScheduleCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			activityCourseScheduleCacheModel.createDate = createDate.getTime();
		}
		else {
			activityCourseScheduleCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			activityCourseScheduleCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			activityCourseScheduleCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		activityCourseScheduleCacheModel.activityCoursePlaceId =
			getActivityCoursePlaceId();

		activityCourseScheduleCacheModel.startTime = getStartTime();

		String startTime = activityCourseScheduleCacheModel.startTime;

		if ((startTime != null) && (startTime.length() == 0)) {
			activityCourseScheduleCacheModel.startTime = null;
		}

		activityCourseScheduleCacheModel.endTime = getEndTime();

		String endTime = activityCourseScheduleCacheModel.endTime;

		if ((endTime != null) && (endTime.length() == 0)) {
			activityCourseScheduleCacheModel.endTime = null;
		}

		activityCourseScheduleCacheModel.monday = isMonday();

		activityCourseScheduleCacheModel.tuesday = isTuesday();

		activityCourseScheduleCacheModel.wednesday = isWednesday();

		activityCourseScheduleCacheModel.thursday = isThursday();

		activityCourseScheduleCacheModel.friday = isFriday();

		activityCourseScheduleCacheModel.saturday = isSaturday();

		activityCourseScheduleCacheModel.sunday = isSunday();

		activityCourseScheduleCacheModel.comments = getComments();

		String comments = activityCourseScheduleCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			activityCourseScheduleCacheModel.comments = null;
		}

		activityCourseScheduleCacheModel.periodsIds = getPeriodsIds();

		String periodsIds = activityCourseScheduleCacheModel.periodsIds;

		if ((periodsIds != null) && (periodsIds.length() == 0)) {
			activityCourseScheduleCacheModel.periodsIds = null;
		}

		return activityCourseScheduleCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ActivityCourseSchedule, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ActivityCourseSchedule, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ActivityCourseSchedule, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply((ActivityCourseSchedule)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ActivityCourseSchedule, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ActivityCourseSchedule, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ActivityCourseSchedule, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply((ActivityCourseSchedule)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ActivityCourseSchedule>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private String _originalUuid;
	private long _activityCourseScheduleId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _activityCoursePlaceId;
	private long _originalActivityCoursePlaceId;
	private boolean _setOriginalActivityCoursePlaceId;
	private String _startTime;
	private String _endTime;
	private boolean _monday;
	private boolean _tuesday;
	private boolean _wednesday;
	private boolean _thursday;
	private boolean _friday;
	private boolean _saturday;
	private boolean _sunday;
	private String _comments;
	private String _commentsCurrentLanguageId;
	private String _periodsIds;
	private long _columnBitmask;
	private ActivityCourseSchedule _escapedModel;

}