/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.interest.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import eu.strasbourg.service.interest.service.persistence.UserInterestPK;

import java.io.Serializable;

/**
 * The base model interface for the UserInterest service. Represents a row in the &quot;interest_UserInterest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link eu.strasbourg.service.interest.model.impl.UserInterestModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link eu.strasbourg.service.interest.model.impl.UserInterestImpl}.
 * </p>
 *
 * @author BenjaminBini
 * @see UserInterest
 * @see eu.strasbourg.service.interest.model.impl.UserInterestImpl
 * @see eu.strasbourg.service.interest.model.impl.UserInterestModelImpl
 * @generated
 */
@ProviderType
public interface UserInterestModel extends BaseModel<UserInterest> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user interest model instance should use the {@link UserInterest} interface instead.
	 */

	/**
	 * Returns the primary key of this user interest.
	 *
	 * @return the primary key of this user interest
	 */
	public UserInterestPK getPrimaryKey();

	/**
	 * Sets the primary key of this user interest.
	 *
	 * @param primaryKey the primary key of this user interest
	 */
	public void setPrimaryKey(UserInterestPK primaryKey);

	/**
	 * Returns the interest ID of this user interest.
	 *
	 * @return the interest ID of this user interest
	 */
	public long getInterestId();

	/**
	 * Sets the interest ID of this user interest.
	 *
	 * @param interestId the interest ID of this user interest
	 */
	public void setInterestId(long interestId);

	/**
	 * Returns the publik user ID of this user interest.
	 *
	 * @return the publik user ID of this user interest
	 */
	public long getPublikUserId();

	/**
	 * Sets the publik user ID of this user interest.
	 *
	 * @param publikUserId the publik user ID of this user interest
	 */
	public void setPublikUserId(long publikUserId);

	/**
	 * Returns the publik user uuid of this user interest.
	 *
	 * @return the publik user uuid of this user interest
	 */
	public String getPublikUserUuid();

	/**
	 * Sets the publik user uuid of this user interest.
	 *
	 * @param publikUserUuid the publik user uuid of this user interest
	 */
	public void setPublikUserUuid(String publikUserUuid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		eu.strasbourg.service.interest.model.UserInterest userInterest);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.interest.model.UserInterest> toCacheModel();

	@Override
	public eu.strasbourg.service.interest.model.UserInterest toEscapedModel();

	@Override
	public eu.strasbourg.service.interest.model.UserInterest toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}