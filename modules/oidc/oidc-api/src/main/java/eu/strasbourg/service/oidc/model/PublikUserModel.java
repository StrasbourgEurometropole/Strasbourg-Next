/**
 * SPDX-FileCopyrightText: (c) 2023 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package eu.strasbourg.service.oidc.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.LocalizedModel;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the PublikUser service. Represents a row in the &quot;publik_PublikUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.oidc.model.impl.PublikUserModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.oidc.model.impl.PublikUserImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PublikUser
 * @generated
 */
@ProviderType
public interface PublikUserModel extends BaseModel<PublikUser>, LocalizedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a publik user model instance should use the {@link PublikUser} interface instead.
	 */

	/**
	 * Returns the primary key of this publik user.
	 *
	 * @return the primary key of this publik user
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this publik user.
	 *
	 * @param primaryKey the primary key of this publik user
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this publik user.
	 *
	 * @return the uuid of this publik user
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this publik user.
	 *
	 * @param uuid the uuid of this publik user
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the publik user liferay ID of this publik user.
	 *
	 * @return the publik user liferay ID of this publik user
	 */
	public long getPublikUserLiferayId();

	/**
	 * Sets the publik user liferay ID of this publik user.
	 *
	 * @param publikUserLiferayId the publik user liferay ID of this publik user
	 */
	public void setPublikUserLiferayId(long publikUserLiferayId);

	/**
	 * Returns the create date of this publik user.
	 *
	 * @return the create date of this publik user
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this publik user.
	 *
	 * @param createDate the create date of this publik user
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this publik user.
	 *
	 * @return the modified date of this publik user
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this publik user.
	 *
	 * @param modifiedDate the modified date of this publik user
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the user ID of this publik user.
	 *
	 * @return the user ID of this publik user
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this publik user.
	 *
	 * @param userId the user ID of this publik user
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this publik user.
	 *
	 * @return the user uuid of this publik user
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this publik user.
	 *
	 * @param userUuid the user uuid of this publik user
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this publik user.
	 *
	 * @return the user name of this publik user
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this publik user.
	 *
	 * @param userName the user name of this publik user
	 */
	public void setUserName(String userName);

	/**
	 * Returns the publik ID of this publik user.
	 *
	 * @return the publik ID of this publik user
	 */
	@AutoEscape
	public String getPublikId();

	/**
	 * Sets the publik ID of this publik user.
	 *
	 * @param publikId the publik ID of this publik user
	 */
	public void setPublikId(String publikId);

	/**
	 * Returns the access token of this publik user.
	 *
	 * @return the access token of this publik user
	 */
	@AutoEscape
	public String getAccessToken();

	/**
	 * Sets the access token of this publik user.
	 *
	 * @param accessToken the access token of this publik user
	 */
	public void setAccessToken(String accessToken);

	/**
	 * Returns the first name of this publik user.
	 *
	 * @return the first name of this publik user
	 */
	@AutoEscape
	public String getFirstName();

	/**
	 * Sets the first name of this publik user.
	 *
	 * @param firstName the first name of this publik user
	 */
	public void setFirstName(String firstName);

	/**
	 * Returns the last name of this publik user.
	 *
	 * @return the last name of this publik user
	 */
	@AutoEscape
	public String getLastName();

	/**
	 * Sets the last name of this publik user.
	 *
	 * @param lastName the last name of this publik user
	 */
	public void setLastName(String lastName);

	/**
	 * Returns the email of this publik user.
	 *
	 * @return the email of this publik user
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this publik user.
	 *
	 * @param email the email of this publik user
	 */
	public void setEmail(String email);

	/**
	 * Returns the map config of this publik user.
	 *
	 * @return the map config of this publik user
	 */
	@AutoEscape
	public String getMapConfig();

	/**
	 * Sets the map config of this publik user.
	 *
	 * @param mapConfig the map config of this publik user
	 */
	public void setMapConfig(String mapConfig);

	/**
	 * Returns the display config of this publik user.
	 *
	 * @return the display config of this publik user
	 */
	@AutoEscape
	public String getDisplayConfig();

	/**
	 * Sets the display config of this publik user.
	 *
	 * @param displayConfig the display config of this publik user
	 */
	public void setDisplayConfig(String displayConfig);

	/**
	 * Returns the pact signature of this publik user.
	 *
	 * @return the pact signature of this publik user
	 */
	public Date getPactSignature();

	/**
	 * Sets the pact signature of this publik user.
	 *
	 * @param pactSignature the pact signature of this publik user
	 */
	public void setPactSignature(Date pactSignature);

	/**
	 * Returns the banish date of this publik user.
	 *
	 * @return the banish date of this publik user
	 */
	public Date getBanishDate();

	/**
	 * Sets the banish date of this publik user.
	 *
	 * @param banishDate the banish date of this publik user
	 */
	public void setBanishDate(Date banishDate);

	/**
	 * Returns the banish description of this publik user.
	 *
	 * @return the banish description of this publik user
	 */
	public String getBanishDescription();

	/**
	 * Returns the localized banish description of this publik user in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized banish description of this publik user
	 */
	@AutoEscape
	public String getBanishDescription(Locale locale);

	/**
	 * Returns the localized banish description of this publik user in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized banish description of this publik user. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getBanishDescription(Locale locale, boolean useDefault);

	/**
	 * Returns the localized banish description of this publik user in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized banish description of this publik user
	 */
	@AutoEscape
	public String getBanishDescription(String languageId);

	/**
	 * Returns the localized banish description of this publik user in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized banish description of this publik user
	 */
	@AutoEscape
	public String getBanishDescription(String languageId, boolean useDefault);

	@AutoEscape
	public String getBanishDescriptionCurrentLanguageId();

	@AutoEscape
	public String getBanishDescriptionCurrentValue();

	/**
	 * Returns a map of the locales and localized banish descriptions of this publik user.
	 *
	 * @return the locales and localized banish descriptions of this publik user
	 */
	public Map<Locale, String> getBanishDescriptionMap();

	/**
	 * Sets the banish description of this publik user.
	 *
	 * @param banishDescription the banish description of this publik user
	 */
	public void setBanishDescription(String banishDescription);

	/**
	 * Sets the localized banish description of this publik user in the language.
	 *
	 * @param banishDescription the localized banish description of this publik user
	 * @param locale the locale of the language
	 */
	public void setBanishDescription(String banishDescription, Locale locale);

	/**
	 * Sets the localized banish description of this publik user in the language, and sets the default locale.
	 *
	 * @param banishDescription the localized banish description of this publik user
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setBanishDescription(
		String banishDescription, Locale locale, Locale defaultLocale);

	public void setBanishDescriptionCurrentLanguageId(String languageId);

	/**
	 * Sets the localized banish descriptions of this publik user from the map of locales and localized banish descriptions.
	 *
	 * @param banishDescriptionMap the locales and localized banish descriptions of this publik user
	 */
	public void setBanishDescriptionMap(
		Map<Locale, String> banishDescriptionMap);

	/**
	 * Sets the localized banish descriptions of this publik user from the map of locales and localized banish descriptions, and sets the default locale.
	 *
	 * @param banishDescriptionMap the locales and localized banish descriptions of this publik user
	 * @param defaultLocale the default locale
	 */
	public void setBanishDescriptionMap(
		Map<Locale, String> banishDescriptionMap, Locale defaultLocale);

	/**
	 * Returns the image url of this publik user.
	 *
	 * @return the image url of this publik user
	 */
	@AutoEscape
	public String getImageURL();

	/**
	 * Sets the image url of this publik user.
	 *
	 * @param imageURL the image url of this publik user
	 */
	public void setImageURL(String imageURL);

	/**
	 * Returns the pact display of this publik user.
	 *
	 * @return the pact display of this publik user
	 */
	public boolean getPactDisplay();

	/**
	 * Returns <code>true</code> if this publik user is pact display.
	 *
	 * @return <code>true</code> if this publik user is pact display; <code>false</code> otherwise
	 */
	public boolean isPactDisplay();

	/**
	 * Sets whether this publik user is pact display.
	 *
	 * @param pactDisplay the pact display of this publik user
	 */
	public void setPactDisplay(boolean pactDisplay);

	/**
	 * Returns the csmap json of this publik user.
	 *
	 * @return the csmap json of this publik user
	 */
	@AutoEscape
	public String getCsmapJSON();

	/**
	 * Sets the csmap json of this publik user.
	 *
	 * @param csmapJSON the csmap json of this publik user
	 */
	public void setCsmapJSON(String csmapJSON);

	/**
	 * Returns the modified date json of this publik user.
	 *
	 * @return the modified date json of this publik user
	 */
	public Date getModifiedDateJSON();

	/**
	 * Sets the modified date json of this publik user.
	 *
	 * @param modifiedDateJSON the modified date json of this publik user
	 */
	public void setModifiedDateJSON(Date modifiedDateJSON);

	/**
	 * Returns the topics fcm of this publik user.
	 *
	 * @return the topics fcm of this publik user
	 */
	@AutoEscape
	public String getTopicsFCM();

	/**
	 * Sets the topics fcm of this publik user.
	 *
	 * @param topicsFCM the topics fcm of this publik user
	 */
	public void setTopicsFCM(String topicsFCM);

	/**
	 * Returns the last update time topics of this publik user.
	 *
	 * @return the last update time topics of this publik user
	 */
	public long getLastUpdateTimeTopics();

	/**
	 * Sets the last update time topics of this publik user.
	 *
	 * @param lastUpdateTimeTopics the last update time topics of this publik user
	 */
	public void setLastUpdateTimeTopics(long lastUpdateTimeTopics);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public PublikUser cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}