/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.project.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import eu.strasbourg.service.project.model.Petition;
import eu.strasbourg.service.project.model.PetitionModel;
import eu.strasbourg.service.project.model.PetitionSoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Petition service. Represents a row in the &quot;project_Petition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PetitionModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PetitionImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see PetitionImpl
 * @generated
 */
@JSON(strict = true)
public class PetitionModelImpl
	extends BaseModelImpl<Petition> implements PetitionModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a petition model instance should use the <code>Petition</code> interface instead.
	 */
	public static final String TABLE_NAME = "project_Petition";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"petitionId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"status", Types.INTEGER}, {"statusByUserId", Types.BIGINT},
		{"statusByUserName", Types.VARCHAR}, {"statusDate", Types.TIMESTAMP},
		{"title", Types.VARCHAR}, {"summary", Types.VARCHAR},
		{"description", Types.CLOB}, {"placeTextArea", Types.VARCHAR},
		{"filesDownload", Types.VARCHAR}, {"publicationDate", Types.TIMESTAMP},
		{"expirationDate", Types.TIMESTAMP}, {"extensionDate", Types.TIMESTAMP},
		{"quotaSignature", Types.BIGINT}, {"inTheNameOf", Types.VARCHAR},
		{"petitionnaireLastname", Types.VARCHAR},
		{"petitionnaireFirstname", Types.VARCHAR},
		{"petitionnaireBirthday", Types.TIMESTAMP},
		{"petitionnaireAdresse", Types.VARCHAR},
		{"petitionnairePostalCode", Types.BIGINT},
		{"petitionnaireCity", Types.VARCHAR},
		{"petitionnairePhone", Types.VARCHAR},
		{"petitionnaireEmail", Types.VARCHAR}, {"isSupported", Types.BOOLEAN},
		{"supportedBy", Types.VARCHAR}, {"videoUrl", Types.VARCHAR},
		{"externalImageURL", Types.VARCHAR},
		{"externalImageCopyright", Types.VARCHAR},
		{"mediaChoice", Types.BOOLEAN}, {"publikId", Types.VARCHAR},
		{"imageId", Types.BIGINT}, {"filesIds", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("summary", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.CLOB);
		TABLE_COLUMNS_MAP.put("placeTextArea", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("filesDownload", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("publicationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("expirationDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("extensionDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("quotaSignature", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("inTheNameOf", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnaireLastname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnaireFirstname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnaireBirthday", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("petitionnaireAdresse", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnairePostalCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("petitionnaireCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnairePhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("petitionnaireEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isSupported", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("supportedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("videoUrl", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalImageURL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalImageCopyright", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mediaChoice", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("publikId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("imageId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("filesIds", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table project_Petition (uuid_ VARCHAR(75) null,petitionId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,title VARCHAR(400) null,summary VARCHAR(500) null,description TEXT null,placeTextArea VARCHAR(400) null,filesDownload VARCHAR(75) null,publicationDate DATE null,expirationDate DATE null,extensionDate DATE null,quotaSignature LONG,inTheNameOf VARCHAR(400) null,petitionnaireLastname VARCHAR(75) null,petitionnaireFirstname VARCHAR(75) null,petitionnaireBirthday DATE null,petitionnaireAdresse VARCHAR(400) null,petitionnairePostalCode LONG,petitionnaireCity VARCHAR(400) null,petitionnairePhone VARCHAR(75) null,petitionnaireEmail VARCHAR(400) null,isSupported BOOLEAN,supportedBy VARCHAR(75) null,videoUrl VARCHAR(400) null,externalImageURL VARCHAR(400) null,externalImageCopyright VARCHAR(75) null,mediaChoice BOOLEAN,publikId VARCHAR(75) null,imageId LONG,filesIds VARCHAR(400) null)";

	public static final String TABLE_SQL_DROP = "drop table project_Petition";

	public static final String ORDER_BY_JPQL = " ORDER BY petition.title ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY project_Petition.title ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.project.service.util.PropsUtil.get(
			"value.object.entity.cache.enabled.eu.strasbourg.service.project.model.Petition"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.project.service.util.PropsUtil.get(
			"value.object.finder.cache.enabled.eu.strasbourg.service.project.model.Petition"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		eu.strasbourg.service.project.service.util.PropsUtil.get(
			"value.object.column.bitmask.enabled.eu.strasbourg.service.project.model.Petition"),
		true);

	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	public static final long GROUPID_COLUMN_BITMASK = 2L;

	public static final long PUBLIKID_COLUMN_BITMASK = 4L;

	public static final long STATUS_COLUMN_BITMASK = 8L;

	public static final long UUID_COLUMN_BITMASK = 16L;

	public static final long TITLE_COLUMN_BITMASK = 32L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Petition toModel(PetitionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Petition model = new PetitionImpl();

		model.setUuid(soapModel.getUuid());
		model.setPetitionId(soapModel.getPetitionId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());
		model.setTitle(soapModel.getTitle());
		model.setSummary(soapModel.getSummary());
		model.setDescription(soapModel.getDescription());
		model.setPlaceTextArea(soapModel.getPlaceTextArea());
		model.setFilesDownload(soapModel.getFilesDownload());
		model.setPublicationDate(soapModel.getPublicationDate());
		model.setExpirationDate(soapModel.getExpirationDate());
		model.setExtensionDate(soapModel.getExtensionDate());
		model.setQuotaSignature(soapModel.getQuotaSignature());
		model.setInTheNameOf(soapModel.getInTheNameOf());
		model.setPetitionnaireLastname(soapModel.getPetitionnaireLastname());
		model.setPetitionnaireFirstname(soapModel.getPetitionnaireFirstname());
		model.setPetitionnaireBirthday(soapModel.getPetitionnaireBirthday());
		model.setPetitionnaireAdresse(soapModel.getPetitionnaireAdresse());
		model.setPetitionnairePostalCode(
			soapModel.getPetitionnairePostalCode());
		model.setPetitionnaireCity(soapModel.getPetitionnaireCity());
		model.setPetitionnairePhone(soapModel.getPetitionnairePhone());
		model.setPetitionnaireEmail(soapModel.getPetitionnaireEmail());
		model.setIsSupported(soapModel.isIsSupported());
		model.setSupportedBy(soapModel.getSupportedBy());
		model.setVideoUrl(soapModel.getVideoUrl());
		model.setExternalImageURL(soapModel.getExternalImageURL());
		model.setExternalImageCopyright(soapModel.getExternalImageCopyright());
		model.setMediaChoice(soapModel.isMediaChoice());
		model.setPublikId(soapModel.getPublikId());
		model.setImageId(soapModel.getImageId());
		model.setFilesIds(soapModel.getFilesIds());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Petition> toModels(PetitionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Petition> models = new ArrayList<Petition>(soapModels.length);

		for (PetitionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		eu.strasbourg.service.project.service.util.PropsUtil.get(
			"lock.expiration.time.eu.strasbourg.service.project.model.Petition"));

	public PetitionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _petitionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPetitionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _petitionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Petition.class;
	}

	@Override
	public String getModelClassName() {
		return Petition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Petition, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Petition, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Petition, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Petition)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Petition, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Petition, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Petition)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Petition, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Petition, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Petition>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Petition.class.getClassLoader(), Petition.class,
			ModelWrapper.class);

		try {
			Constructor<Petition> constructor =
				(Constructor<Petition>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<Petition, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Petition, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Petition, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Petition, Object>>();
		Map<String, BiConsumer<Petition, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Petition, ?>>();

		attributeGetterFunctions.put(
			"uuid",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getUuid();
				}

			});
		attributeSetterBiConsumers.put(
			"uuid",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object uuidObject) {
					petition.setUuid((String)uuidObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionId();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object petitionIdObject) {
					petition.setPetitionId((Long)petitionIdObject);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object groupIdObject) {
					petition.setGroupId((Long)groupIdObject);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object companyIdObject) {
					petition.setCompanyId((Long)companyIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object userIdObject) {
					petition.setUserId((Long)userIdObject);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object userNameObject) {
					petition.setUserName((String)userNameObject);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object createDateObject) {
					petition.setCreateDate((Date)createDateObject);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object modifiedDateObject) {

					petition.setModifiedDate((Date)modifiedDateObject);
				}

			});
		attributeGetterFunctions.put(
			"status",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getStatus();
				}

			});
		attributeSetterBiConsumers.put(
			"status",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object statusObject) {
					petition.setStatus((Integer)statusObject);
				}

			});
		attributeGetterFunctions.put(
			"statusByUserId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getStatusByUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"statusByUserId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object statusByUserIdObject) {

					petition.setStatusByUserId((Long)statusByUserIdObject);
				}

			});
		attributeGetterFunctions.put(
			"statusByUserName",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getStatusByUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"statusByUserName",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object statusByUserNameObject) {

					petition.setStatusByUserName(
						(String)statusByUserNameObject);
				}

			});
		attributeGetterFunctions.put(
			"statusDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getStatusDate();
				}

			});
		attributeSetterBiConsumers.put(
			"statusDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object statusDateObject) {
					petition.setStatusDate((Date)statusDateObject);
				}

			});
		attributeGetterFunctions.put(
			"title",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getTitle();
				}

			});
		attributeSetterBiConsumers.put(
			"title",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object titleObject) {
					petition.setTitle((String)titleObject);
				}

			});
		attributeGetterFunctions.put(
			"summary",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getSummary();
				}

			});
		attributeSetterBiConsumers.put(
			"summary",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object summaryObject) {
					petition.setSummary((String)summaryObject);
				}

			});
		attributeGetterFunctions.put(
			"description",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getDescription();
				}

			});
		attributeSetterBiConsumers.put(
			"description",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object descriptionObject) {

					petition.setDescription((String)descriptionObject);
				}

			});
		attributeGetterFunctions.put(
			"placeTextArea",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPlaceTextArea();
				}

			});
		attributeSetterBiConsumers.put(
			"placeTextArea",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object placeTextAreaObject) {

					petition.setPlaceTextArea((String)placeTextAreaObject);
				}

			});
		attributeGetterFunctions.put(
			"filesDownload",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getFilesDownload();
				}

			});
		attributeSetterBiConsumers.put(
			"filesDownload",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object filesDownloadObject) {

					petition.setFilesDownload((String)filesDownloadObject);
				}

			});
		attributeGetterFunctions.put(
			"publicationDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPublicationDate();
				}

			});
		attributeSetterBiConsumers.put(
			"publicationDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object publicationDateObject) {

					petition.setPublicationDate((Date)publicationDateObject);
				}

			});
		attributeGetterFunctions.put(
			"expirationDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getExpirationDate();
				}

			});
		attributeSetterBiConsumers.put(
			"expirationDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object expirationDateObject) {

					petition.setExpirationDate((Date)expirationDateObject);
				}

			});
		attributeGetterFunctions.put(
			"extensionDate",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getExtensionDate();
				}

			});
		attributeSetterBiConsumers.put(
			"extensionDate",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object extensionDateObject) {

					petition.setExtensionDate((Date)extensionDateObject);
				}

			});
		attributeGetterFunctions.put(
			"quotaSignature",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getQuotaSignature();
				}

			});
		attributeSetterBiConsumers.put(
			"quotaSignature",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object quotaSignatureObject) {

					petition.setQuotaSignature((Long)quotaSignatureObject);
				}

			});
		attributeGetterFunctions.put(
			"inTheNameOf",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getInTheNameOf();
				}

			});
		attributeSetterBiConsumers.put(
			"inTheNameOf",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object inTheNameOfObject) {

					petition.setInTheNameOf((String)inTheNameOfObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireLastname",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireLastname();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireLastname",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireLastnameObject) {

					petition.setPetitionnaireLastname(
						(String)petitionnaireLastnameObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireFirstname",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireFirstname();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireFirstname",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireFirstnameObject) {

					petition.setPetitionnaireFirstname(
						(String)petitionnaireFirstnameObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireBirthday",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireBirthday();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireBirthday",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireBirthdayObject) {

					petition.setPetitionnaireBirthday(
						(Date)petitionnaireBirthdayObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireAdresse",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireAdresse();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireAdresse",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireAdresseObject) {

					petition.setPetitionnaireAdresse(
						(String)petitionnaireAdresseObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnairePostalCode",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnairePostalCode();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnairePostalCode",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnairePostalCodeObject) {

					petition.setPetitionnairePostalCode(
						(Long)petitionnairePostalCodeObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireCity",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireCity();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireCity",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireCityObject) {

					petition.setPetitionnaireCity(
						(String)petitionnaireCityObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnairePhone",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnairePhone();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnairePhone",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnairePhoneObject) {

					petition.setPetitionnairePhone(
						(String)petitionnairePhoneObject);
				}

			});
		attributeGetterFunctions.put(
			"petitionnaireEmail",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPetitionnaireEmail();
				}

			});
		attributeSetterBiConsumers.put(
			"petitionnaireEmail",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object petitionnaireEmailObject) {

					petition.setPetitionnaireEmail(
						(String)petitionnaireEmailObject);
				}

			});
		attributeGetterFunctions.put(
			"isSupported",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getIsSupported();
				}

			});
		attributeSetterBiConsumers.put(
			"isSupported",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object isSupportedObject) {

					petition.setIsSupported((Boolean)isSupportedObject);
				}

			});
		attributeGetterFunctions.put(
			"supportedBy",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getSupportedBy();
				}

			});
		attributeSetterBiConsumers.put(
			"supportedBy",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object supportedByObject) {

					petition.setSupportedBy((String)supportedByObject);
				}

			});
		attributeGetterFunctions.put(
			"videoUrl",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getVideoUrl();
				}

			});
		attributeSetterBiConsumers.put(
			"videoUrl",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object videoUrlObject) {
					petition.setVideoUrl((String)videoUrlObject);
				}

			});
		attributeGetterFunctions.put(
			"externalImageURL",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getExternalImageURL();
				}

			});
		attributeSetterBiConsumers.put(
			"externalImageURL",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object externalImageURLObject) {

					petition.setExternalImageURL(
						(String)externalImageURLObject);
				}

			});
		attributeGetterFunctions.put(
			"externalImageCopyright",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getExternalImageCopyright();
				}

			});
		attributeSetterBiConsumers.put(
			"externalImageCopyright",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object externalImageCopyrightObject) {

					petition.setExternalImageCopyright(
						(String)externalImageCopyrightObject);
				}

			});
		attributeGetterFunctions.put(
			"mediaChoice",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getMediaChoice();
				}

			});
		attributeSetterBiConsumers.put(
			"mediaChoice",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(
					Petition petition, Object mediaChoiceObject) {

					petition.setMediaChoice((Boolean)mediaChoiceObject);
				}

			});
		attributeGetterFunctions.put(
			"publikId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getPublikId();
				}

			});
		attributeSetterBiConsumers.put(
			"publikId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object publikIdObject) {
					petition.setPublikId((String)publikIdObject);
				}

			});
		attributeGetterFunctions.put(
			"imageId",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getImageId();
				}

			});
		attributeSetterBiConsumers.put(
			"imageId",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object imageIdObject) {
					petition.setImageId((Long)imageIdObject);
				}

			});
		attributeGetterFunctions.put(
			"filesIds",
			new Function<Petition, Object>() {

				@Override
				public Object apply(Petition petition) {
					return petition.getFilesIds();
				}

			});
		attributeSetterBiConsumers.put(
			"filesIds",
			new BiConsumer<Petition, Object>() {

				@Override
				public void accept(Petition petition, Object filesIdsObject) {
					petition.setFilesIds((String)filesIdsObject);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getPetitionId() {
		return _petitionId;
	}

	@Override
	public void setPetitionId(long petitionId) {
		_petitionId = petitionId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_columnBitmask = -1L;

		_title = title;
	}

	@JSON
	@Override
	public String getSummary() {
		if (_summary == null) {
			return "";
		}
		else {
			return _summary;
		}
	}

	@Override
	public void setSummary(String summary) {
		_summary = summary;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getPlaceTextArea() {
		if (_placeTextArea == null) {
			return "";
		}
		else {
			return _placeTextArea;
		}
	}

	@Override
	public void setPlaceTextArea(String placeTextArea) {
		_placeTextArea = placeTextArea;
	}

	@JSON
	@Override
	public String getFilesDownload() {
		if (_filesDownload == null) {
			return "";
		}
		else {
			return _filesDownload;
		}
	}

	@Override
	public void setFilesDownload(String filesDownload) {
		_filesDownload = filesDownload;
	}

	@JSON
	@Override
	public Date getPublicationDate() {
		return _publicationDate;
	}

	@Override
	public void setPublicationDate(Date publicationDate) {
		_publicationDate = publicationDate;
	}

	@JSON
	@Override
	public Date getExpirationDate() {
		return _expirationDate;
	}

	@Override
	public void setExpirationDate(Date expirationDate) {
		_expirationDate = expirationDate;
	}

	@JSON
	@Override
	public Date getExtensionDate() {
		return _extensionDate;
	}

	@Override
	public void setExtensionDate(Date extensionDate) {
		_extensionDate = extensionDate;
	}

	@JSON
	@Override
	public long getQuotaSignature() {
		return _quotaSignature;
	}

	@Override
	public void setQuotaSignature(long quotaSignature) {
		_quotaSignature = quotaSignature;
	}

	@JSON
	@Override
	public String getInTheNameOf() {
		if (_inTheNameOf == null) {
			return "";
		}
		else {
			return _inTheNameOf;
		}
	}

	@Override
	public void setInTheNameOf(String inTheNameOf) {
		_inTheNameOf = inTheNameOf;
	}

	@JSON
	@Override
	public String getPetitionnaireLastname() {
		if (_petitionnaireLastname == null) {
			return "";
		}
		else {
			return _petitionnaireLastname;
		}
	}

	@Override
	public void setPetitionnaireLastname(String petitionnaireLastname) {
		_petitionnaireLastname = petitionnaireLastname;
	}

	@JSON
	@Override
	public String getPetitionnaireFirstname() {
		if (_petitionnaireFirstname == null) {
			return "";
		}
		else {
			return _petitionnaireFirstname;
		}
	}

	@Override
	public void setPetitionnaireFirstname(String petitionnaireFirstname) {
		_petitionnaireFirstname = petitionnaireFirstname;
	}

	@JSON
	@Override
	public Date getPetitionnaireBirthday() {
		return _petitionnaireBirthday;
	}

	@Override
	public void setPetitionnaireBirthday(Date petitionnaireBirthday) {
		_petitionnaireBirthday = petitionnaireBirthday;
	}

	@JSON
	@Override
	public String getPetitionnaireAdresse() {
		if (_petitionnaireAdresse == null) {
			return "";
		}
		else {
			return _petitionnaireAdresse;
		}
	}

	@Override
	public void setPetitionnaireAdresse(String petitionnaireAdresse) {
		_petitionnaireAdresse = petitionnaireAdresse;
	}

	@JSON
	@Override
	public long getPetitionnairePostalCode() {
		return _petitionnairePostalCode;
	}

	@Override
	public void setPetitionnairePostalCode(long petitionnairePostalCode) {
		_petitionnairePostalCode = petitionnairePostalCode;
	}

	@JSON
	@Override
	public String getPetitionnaireCity() {
		if (_petitionnaireCity == null) {
			return "";
		}
		else {
			return _petitionnaireCity;
		}
	}

	@Override
	public void setPetitionnaireCity(String petitionnaireCity) {
		_petitionnaireCity = petitionnaireCity;
	}

	@JSON
	@Override
	public String getPetitionnairePhone() {
		if (_petitionnairePhone == null) {
			return "";
		}
		else {
			return _petitionnairePhone;
		}
	}

	@Override
	public void setPetitionnairePhone(String petitionnairePhone) {
		_petitionnairePhone = petitionnairePhone;
	}

	@JSON
	@Override
	public String getPetitionnaireEmail() {
		if (_petitionnaireEmail == null) {
			return "";
		}
		else {
			return _petitionnaireEmail;
		}
	}

	@Override
	public void setPetitionnaireEmail(String petitionnaireEmail) {
		_petitionnaireEmail = petitionnaireEmail;
	}

	@JSON
	@Override
	public boolean getIsSupported() {
		return _isSupported;
	}

	@JSON
	@Override
	public boolean isIsSupported() {
		return _isSupported;
	}

	@Override
	public void setIsSupported(boolean isSupported) {
		_isSupported = isSupported;
	}

	@JSON
	@Override
	public String getSupportedBy() {
		if (_supportedBy == null) {
			return "";
		}
		else {
			return _supportedBy;
		}
	}

	@Override
	public void setSupportedBy(String supportedBy) {
		_supportedBy = supportedBy;
	}

	@JSON
	@Override
	public String getVideoUrl() {
		if (_videoUrl == null) {
			return "";
		}
		else {
			return _videoUrl;
		}
	}

	@Override
	public void setVideoUrl(String videoUrl) {
		_videoUrl = videoUrl;
	}

	@JSON
	@Override
	public String getExternalImageURL() {
		if (_externalImageURL == null) {
			return "";
		}
		else {
			return _externalImageURL;
		}
	}

	@Override
	public void setExternalImageURL(String externalImageURL) {
		_externalImageURL = externalImageURL;
	}

	@JSON
	@Override
	public String getExternalImageCopyright() {
		if (_externalImageCopyright == null) {
			return "";
		}
		else {
			return _externalImageCopyright;
		}
	}

	@Override
	public void setExternalImageCopyright(String externalImageCopyright) {
		_externalImageCopyright = externalImageCopyright;
	}

	@JSON
	@Override
	public boolean getMediaChoice() {
		return _mediaChoice;
	}

	@JSON
	@Override
	public boolean isMediaChoice() {
		return _mediaChoice;
	}

	@Override
	public void setMediaChoice(boolean mediaChoice) {
		_mediaChoice = mediaChoice;
	}

	@JSON
	@Override
	public String getPublikId() {
		if (_publikId == null) {
			return "";
		}
		else {
			return _publikId;
		}
	}

	@Override
	public void setPublikId(String publikId) {
		_columnBitmask |= PUBLIKID_COLUMN_BITMASK;

		if (_originalPublikId == null) {
			_originalPublikId = _publikId;
		}

		_publikId = publikId;
	}

	public String getOriginalPublikId() {
		return GetterUtil.getString(_originalPublikId);
	}

	@JSON
	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		_imageId = imageId;
	}

	@JSON
	@Override
	public String getFilesIds() {
		if (_filesIds == null) {
			return "";
		}
		else {
			return _filesIds;
		}
	}

	@Override
	public void setFilesIds(String filesIds) {
		_filesIds = filesIds;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Petition.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Petition.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Petition toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Petition>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PetitionImpl petitionImpl = new PetitionImpl();

		petitionImpl.setUuid(getUuid());
		petitionImpl.setPetitionId(getPetitionId());
		petitionImpl.setGroupId(getGroupId());
		petitionImpl.setCompanyId(getCompanyId());
		petitionImpl.setUserId(getUserId());
		petitionImpl.setUserName(getUserName());
		petitionImpl.setCreateDate(getCreateDate());
		petitionImpl.setModifiedDate(getModifiedDate());
		petitionImpl.setStatus(getStatus());
		petitionImpl.setStatusByUserId(getStatusByUserId());
		petitionImpl.setStatusByUserName(getStatusByUserName());
		petitionImpl.setStatusDate(getStatusDate());
		petitionImpl.setTitle(getTitle());
		petitionImpl.setSummary(getSummary());
		petitionImpl.setDescription(getDescription());
		petitionImpl.setPlaceTextArea(getPlaceTextArea());
		petitionImpl.setFilesDownload(getFilesDownload());
		petitionImpl.setPublicationDate(getPublicationDate());
		petitionImpl.setExpirationDate(getExpirationDate());
		petitionImpl.setExtensionDate(getExtensionDate());
		petitionImpl.setQuotaSignature(getQuotaSignature());
		petitionImpl.setInTheNameOf(getInTheNameOf());
		petitionImpl.setPetitionnaireLastname(getPetitionnaireLastname());
		petitionImpl.setPetitionnaireFirstname(getPetitionnaireFirstname());
		petitionImpl.setPetitionnaireBirthday(getPetitionnaireBirthday());
		petitionImpl.setPetitionnaireAdresse(getPetitionnaireAdresse());
		petitionImpl.setPetitionnairePostalCode(getPetitionnairePostalCode());
		petitionImpl.setPetitionnaireCity(getPetitionnaireCity());
		petitionImpl.setPetitionnairePhone(getPetitionnairePhone());
		petitionImpl.setPetitionnaireEmail(getPetitionnaireEmail());
		petitionImpl.setIsSupported(isIsSupported());
		petitionImpl.setSupportedBy(getSupportedBy());
		petitionImpl.setVideoUrl(getVideoUrl());
		petitionImpl.setExternalImageURL(getExternalImageURL());
		petitionImpl.setExternalImageCopyright(getExternalImageCopyright());
		petitionImpl.setMediaChoice(isMediaChoice());
		petitionImpl.setPublikId(getPublikId());
		petitionImpl.setImageId(getImageId());
		petitionImpl.setFilesIds(getFilesIds());

		petitionImpl.resetOriginalValues();

		return petitionImpl;
	}

	@Override
	public int compareTo(Petition petition) {
		int value = 0;

		value = getTitle().compareTo(petition.getTitle());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Petition)) {
			return false;
		}

		Petition petition = (Petition)object;

		long primaryKey = petition.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PetitionModelImpl petitionModelImpl = this;

		petitionModelImpl._originalUuid = petitionModelImpl._uuid;

		petitionModelImpl._originalGroupId = petitionModelImpl._groupId;

		petitionModelImpl._setOriginalGroupId = false;

		petitionModelImpl._originalCompanyId = petitionModelImpl._companyId;

		petitionModelImpl._setOriginalCompanyId = false;

		petitionModelImpl._setModifiedDate = false;

		petitionModelImpl._originalStatus = petitionModelImpl._status;

		petitionModelImpl._setOriginalStatus = false;

		petitionModelImpl._originalPublikId = petitionModelImpl._publikId;

		petitionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Petition> toCacheModel() {
		PetitionCacheModel petitionCacheModel = new PetitionCacheModel();

		petitionCacheModel.uuid = getUuid();

		String uuid = petitionCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			petitionCacheModel.uuid = null;
		}

		petitionCacheModel.petitionId = getPetitionId();

		petitionCacheModel.groupId = getGroupId();

		petitionCacheModel.companyId = getCompanyId();

		petitionCacheModel.userId = getUserId();

		petitionCacheModel.userName = getUserName();

		String userName = petitionCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			petitionCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			petitionCacheModel.createDate = createDate.getTime();
		}
		else {
			petitionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			petitionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			petitionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		petitionCacheModel.status = getStatus();

		petitionCacheModel.statusByUserId = getStatusByUserId();

		petitionCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = petitionCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			petitionCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			petitionCacheModel.statusDate = statusDate.getTime();
		}
		else {
			petitionCacheModel.statusDate = Long.MIN_VALUE;
		}

		petitionCacheModel.title = getTitle();

		String title = petitionCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			petitionCacheModel.title = null;
		}

		petitionCacheModel.summary = getSummary();

		String summary = petitionCacheModel.summary;

		if ((summary != null) && (summary.length() == 0)) {
			petitionCacheModel.summary = null;
		}

		petitionCacheModel.description = getDescription();

		String description = petitionCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			petitionCacheModel.description = null;
		}

		petitionCacheModel.placeTextArea = getPlaceTextArea();

		String placeTextArea = petitionCacheModel.placeTextArea;

		if ((placeTextArea != null) && (placeTextArea.length() == 0)) {
			petitionCacheModel.placeTextArea = null;
		}

		petitionCacheModel.filesDownload = getFilesDownload();

		String filesDownload = petitionCacheModel.filesDownload;

		if ((filesDownload != null) && (filesDownload.length() == 0)) {
			petitionCacheModel.filesDownload = null;
		}

		Date publicationDate = getPublicationDate();

		if (publicationDate != null) {
			petitionCacheModel.publicationDate = publicationDate.getTime();
		}
		else {
			petitionCacheModel.publicationDate = Long.MIN_VALUE;
		}

		Date expirationDate = getExpirationDate();

		if (expirationDate != null) {
			petitionCacheModel.expirationDate = expirationDate.getTime();
		}
		else {
			petitionCacheModel.expirationDate = Long.MIN_VALUE;
		}

		Date extensionDate = getExtensionDate();

		if (extensionDate != null) {
			petitionCacheModel.extensionDate = extensionDate.getTime();
		}
		else {
			petitionCacheModel.extensionDate = Long.MIN_VALUE;
		}

		petitionCacheModel.quotaSignature = getQuotaSignature();

		petitionCacheModel.inTheNameOf = getInTheNameOf();

		String inTheNameOf = petitionCacheModel.inTheNameOf;

		if ((inTheNameOf != null) && (inTheNameOf.length() == 0)) {
			petitionCacheModel.inTheNameOf = null;
		}

		petitionCacheModel.petitionnaireLastname = getPetitionnaireLastname();

		String petitionnaireLastname = petitionCacheModel.petitionnaireLastname;

		if ((petitionnaireLastname != null) &&
			(petitionnaireLastname.length() == 0)) {

			petitionCacheModel.petitionnaireLastname = null;
		}

		petitionCacheModel.petitionnaireFirstname = getPetitionnaireFirstname();

		String petitionnaireFirstname =
			petitionCacheModel.petitionnaireFirstname;

		if ((petitionnaireFirstname != null) &&
			(petitionnaireFirstname.length() == 0)) {

			petitionCacheModel.petitionnaireFirstname = null;
		}

		Date petitionnaireBirthday = getPetitionnaireBirthday();

		if (petitionnaireBirthday != null) {
			petitionCacheModel.petitionnaireBirthday =
				petitionnaireBirthday.getTime();
		}
		else {
			petitionCacheModel.petitionnaireBirthday = Long.MIN_VALUE;
		}

		petitionCacheModel.petitionnaireAdresse = getPetitionnaireAdresse();

		String petitionnaireAdresse = petitionCacheModel.petitionnaireAdresse;

		if ((petitionnaireAdresse != null) &&
			(petitionnaireAdresse.length() == 0)) {

			petitionCacheModel.petitionnaireAdresse = null;
		}

		petitionCacheModel.petitionnairePostalCode =
			getPetitionnairePostalCode();

		petitionCacheModel.petitionnaireCity = getPetitionnaireCity();

		String petitionnaireCity = petitionCacheModel.petitionnaireCity;

		if ((petitionnaireCity != null) && (petitionnaireCity.length() == 0)) {
			petitionCacheModel.petitionnaireCity = null;
		}

		petitionCacheModel.petitionnairePhone = getPetitionnairePhone();

		String petitionnairePhone = petitionCacheModel.petitionnairePhone;

		if ((petitionnairePhone != null) &&
			(petitionnairePhone.length() == 0)) {

			petitionCacheModel.petitionnairePhone = null;
		}

		petitionCacheModel.petitionnaireEmail = getPetitionnaireEmail();

		String petitionnaireEmail = petitionCacheModel.petitionnaireEmail;

		if ((petitionnaireEmail != null) &&
			(petitionnaireEmail.length() == 0)) {

			petitionCacheModel.petitionnaireEmail = null;
		}

		petitionCacheModel.isSupported = isIsSupported();

		petitionCacheModel.supportedBy = getSupportedBy();

		String supportedBy = petitionCacheModel.supportedBy;

		if ((supportedBy != null) && (supportedBy.length() == 0)) {
			petitionCacheModel.supportedBy = null;
		}

		petitionCacheModel.videoUrl = getVideoUrl();

		String videoUrl = petitionCacheModel.videoUrl;

		if ((videoUrl != null) && (videoUrl.length() == 0)) {
			petitionCacheModel.videoUrl = null;
		}

		petitionCacheModel.externalImageURL = getExternalImageURL();

		String externalImageURL = petitionCacheModel.externalImageURL;

		if ((externalImageURL != null) && (externalImageURL.length() == 0)) {
			petitionCacheModel.externalImageURL = null;
		}

		petitionCacheModel.externalImageCopyright = getExternalImageCopyright();

		String externalImageCopyright =
			petitionCacheModel.externalImageCopyright;

		if ((externalImageCopyright != null) &&
			(externalImageCopyright.length() == 0)) {

			petitionCacheModel.externalImageCopyright = null;
		}

		petitionCacheModel.mediaChoice = isMediaChoice();

		petitionCacheModel.publikId = getPublikId();

		String publikId = petitionCacheModel.publikId;

		if ((publikId != null) && (publikId.length() == 0)) {
			petitionCacheModel.publikId = null;
		}

		petitionCacheModel.imageId = getImageId();

		petitionCacheModel.filesIds = getFilesIds();

		String filesIds = petitionCacheModel.filesIds;

		if ((filesIds != null) && (filesIds.length() == 0)) {
			petitionCacheModel.filesIds = null;
		}

		return petitionCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Petition, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Petition, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Petition, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((Petition)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Petition, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Petition, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Petition, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Petition)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Petition>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private String _originalUuid;
	private long _petitionId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private String _title;
	private String _summary;
	private String _description;
	private String _placeTextArea;
	private String _filesDownload;
	private Date _publicationDate;
	private Date _expirationDate;
	private Date _extensionDate;
	private long _quotaSignature;
	private String _inTheNameOf;
	private String _petitionnaireLastname;
	private String _petitionnaireFirstname;
	private Date _petitionnaireBirthday;
	private String _petitionnaireAdresse;
	private long _petitionnairePostalCode;
	private String _petitionnaireCity;
	private String _petitionnairePhone;
	private String _petitionnaireEmail;
	private boolean _isSupported;
	private String _supportedBy;
	private String _videoUrl;
	private String _externalImageURL;
	private String _externalImageCopyright;
	private boolean _mediaChoice;
	private String _publikId;
	private String _originalPublikId;
	private long _imageId;
	private String _filesIds;
	private long _columnBitmask;
	private Petition _escapedModel;

}