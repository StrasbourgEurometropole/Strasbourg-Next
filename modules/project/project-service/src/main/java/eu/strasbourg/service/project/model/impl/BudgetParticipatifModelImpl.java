/**
 * SPDX-FileCopyrightText: (c) 2023 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package eu.strasbourg.service.project.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import eu.strasbourg.service.project.model.BudgetParticipatif;
import eu.strasbourg.service.project.model.BudgetParticipatifModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Objects;
import java.util.Set;
import java.util.TreeSet;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the BudgetParticipatif service. Represents a row in the &quot;project_BudgetParticipatif&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>BudgetParticipatifModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BudgetParticipatifImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see BudgetParticipatifImpl
 * @generated
 */
@JSON(strict = true)
public class BudgetParticipatifModelImpl
	extends BaseModelImpl<BudgetParticipatif>
	implements BudgetParticipatifModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a budget participatif model instance should use the <code>BudgetParticipatif</code> interface instead.
	 */
	public static final String TABLE_NAME = "project_BudgetParticipatif";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"budgetParticipatifId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"status", Types.INTEGER}, {"statusByUserId", Types.BIGINT},
		{"statusByUserName", Types.VARCHAR}, {"statusDate", Types.TIMESTAMP},
		{"title", Types.VARCHAR}, {"description", Types.CLOB},
		{"summary", Types.VARCHAR}, {"budget", Types.VARCHAR},
		{"motif", Types.CLOB}, {"placeTextArea", Types.VARCHAR},
		{"inTheNameOf", Types.VARCHAR}, {"commitment", Types.VARCHAR},
		{"citoyenLastname", Types.VARCHAR}, {"citoyenFirstname", Types.VARCHAR},
		{"citoyenAdresse", Types.VARCHAR}, {"citoyenPostalCode", Types.BIGINT},
		{"citoyenCity", Types.VARCHAR}, {"citoyenPhone", Types.VARCHAR},
		{"citoyenMobile", Types.VARCHAR}, {"citoyenEmail", Types.VARCHAR},
		{"citoyenBirthday", Types.TIMESTAMP}, {"hasCopyright", Types.BOOLEAN},
		{"videoUrl", Types.VARCHAR}, {"imageTimeline", Types.BIGINT},
		{"opacityImage", Types.DOUBLE}, {"isCrush", Types.BOOLEAN},
		{"crushComment", Types.CLOB}, {"publikId", Types.VARCHAR},
		{"imageId", Types.BIGINT}, {"filesIds", Types.VARCHAR},
		{"budgetPhaseId", Types.BIGINT}, {"parentId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("budgetParticipatifId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.CLOB);
		TABLE_COLUMNS_MAP.put("summary", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("budget", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("motif", Types.CLOB);
		TABLE_COLUMNS_MAP.put("placeTextArea", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inTheNameOf", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("commitment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenLastname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenFirstname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenAdresse", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenPostalCode", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("citoyenCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenMobile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("citoyenBirthday", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("hasCopyright", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("videoUrl", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("imageTimeline", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("opacityImage", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("isCrush", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("crushComment", Types.CLOB);
		TABLE_COLUMNS_MAP.put("publikId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("imageId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("filesIds", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("budgetPhaseId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("parentId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table project_BudgetParticipatif (uuid_ VARCHAR(75) null,budgetParticipatifId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,title VARCHAR(400) null,description TEXT null,summary VARCHAR(600) null,budget VARCHAR(75) null,motif TEXT null,placeTextArea VARCHAR(400) null,inTheNameOf VARCHAR(400) null,commitment VARCHAR(75) null,citoyenLastname VARCHAR(75) null,citoyenFirstname VARCHAR(75) null,citoyenAdresse VARCHAR(400) null,citoyenPostalCode LONG,citoyenCity VARCHAR(400) null,citoyenPhone VARCHAR(75) null,citoyenMobile VARCHAR(75) null,citoyenEmail VARCHAR(400) null,citoyenBirthday DATE null,hasCopyright BOOLEAN,videoUrl VARCHAR(400) null,imageTimeline LONG,opacityImage DOUBLE,isCrush BOOLEAN,crushComment TEXT null,publikId VARCHAR(75) null,imageId LONG,filesIds VARCHAR(400) null,budgetPhaseId LONG,parentId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table project_BudgetParticipatif";

	public static final String ORDER_BY_JPQL =
		" ORDER BY budgetParticipatif.modifiedDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY project_BudgetParticipatif.modifiedDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean ENTITY_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean FINDER_CACHE_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static final boolean COLUMN_BITMASK_ENABLED = true;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUDGETPHASEID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ISCRUSH_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PARENTID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PUBLIKID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long MODIFIEDDATE_COLUMN_BITMASK = 256L;

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		eu.strasbourg.service.project.service.util.PropsUtil.get(
			"lock.expiration.time.eu.strasbourg.service.project.model.BudgetParticipatif"));

	public BudgetParticipatifModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _budgetParticipatifId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBudgetParticipatifId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _budgetParticipatifId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BudgetParticipatif.class;
	}

	@Override
	public String getModelClassName() {
		return BudgetParticipatif.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<BudgetParticipatif, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<BudgetParticipatif, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<BudgetParticipatif, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((BudgetParticipatif)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<BudgetParticipatif, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<BudgetParticipatif, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(BudgetParticipatif)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<BudgetParticipatif, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<BudgetParticipatif, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<BudgetParticipatif, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<BudgetParticipatif, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<BudgetParticipatif, Object>>();

			attributeGetterFunctions.put("uuid", BudgetParticipatif::getUuid);
			attributeGetterFunctions.put(
				"budgetParticipatifId",
				BudgetParticipatif::getBudgetParticipatifId);
			attributeGetterFunctions.put(
				"groupId", BudgetParticipatif::getGroupId);
			attributeGetterFunctions.put(
				"companyId", BudgetParticipatif::getCompanyId);
			attributeGetterFunctions.put(
				"userId", BudgetParticipatif::getUserId);
			attributeGetterFunctions.put(
				"userName", BudgetParticipatif::getUserName);
			attributeGetterFunctions.put(
				"createDate", BudgetParticipatif::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", BudgetParticipatif::getModifiedDate);
			attributeGetterFunctions.put(
				"status", BudgetParticipatif::getStatus);
			attributeGetterFunctions.put(
				"statusByUserId", BudgetParticipatif::getStatusByUserId);
			attributeGetterFunctions.put(
				"statusByUserName", BudgetParticipatif::getStatusByUserName);
			attributeGetterFunctions.put(
				"statusDate", BudgetParticipatif::getStatusDate);
			attributeGetterFunctions.put("title", BudgetParticipatif::getTitle);
			attributeGetterFunctions.put(
				"description", BudgetParticipatif::getDescription);
			attributeGetterFunctions.put(
				"summary", BudgetParticipatif::getSummary);
			attributeGetterFunctions.put(
				"budget", BudgetParticipatif::getBudget);
			attributeGetterFunctions.put("motif", BudgetParticipatif::getMotif);
			attributeGetterFunctions.put(
				"placeTextArea", BudgetParticipatif::getPlaceTextArea);
			attributeGetterFunctions.put(
				"inTheNameOf", BudgetParticipatif::getInTheNameOf);
			attributeGetterFunctions.put(
				"commitment", BudgetParticipatif::getCommitment);
			attributeGetterFunctions.put(
				"citoyenLastname", BudgetParticipatif::getCitoyenLastname);
			attributeGetterFunctions.put(
				"citoyenFirstname", BudgetParticipatif::getCitoyenFirstname);
			attributeGetterFunctions.put(
				"citoyenAdresse", BudgetParticipatif::getCitoyenAdresse);
			attributeGetterFunctions.put(
				"citoyenPostalCode", BudgetParticipatif::getCitoyenPostalCode);
			attributeGetterFunctions.put(
				"citoyenCity", BudgetParticipatif::getCitoyenCity);
			attributeGetterFunctions.put(
				"citoyenPhone", BudgetParticipatif::getCitoyenPhone);
			attributeGetterFunctions.put(
				"citoyenMobile", BudgetParticipatif::getCitoyenMobile);
			attributeGetterFunctions.put(
				"citoyenEmail", BudgetParticipatif::getCitoyenEmail);
			attributeGetterFunctions.put(
				"citoyenBirthday", BudgetParticipatif::getCitoyenBirthday);
			attributeGetterFunctions.put(
				"hasCopyright", BudgetParticipatif::getHasCopyright);
			attributeGetterFunctions.put(
				"videoUrl", BudgetParticipatif::getVideoUrl);
			attributeGetterFunctions.put(
				"imageTimeline", BudgetParticipatif::getImageTimeline);
			attributeGetterFunctions.put(
				"opacityImage", BudgetParticipatif::getOpacityImage);
			attributeGetterFunctions.put(
				"isCrush", BudgetParticipatif::getIsCrush);
			attributeGetterFunctions.put(
				"crushComment", BudgetParticipatif::getCrushComment);
			attributeGetterFunctions.put(
				"publikId", BudgetParticipatif::getPublikId);
			attributeGetterFunctions.put(
				"imageId", BudgetParticipatif::getImageId);
			attributeGetterFunctions.put(
				"filesIds", BudgetParticipatif::getFilesIds);
			attributeGetterFunctions.put(
				"budgetPhaseId", BudgetParticipatif::getBudgetPhaseId);
			attributeGetterFunctions.put(
				"parentId", BudgetParticipatif::getParentId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<BudgetParticipatif, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<BudgetParticipatif, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<BudgetParticipatif, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setUuid);
			attributeSetterBiConsumers.put(
				"budgetParticipatifId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setBudgetParticipatifId);
			attributeSetterBiConsumers.put(
				"groupId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<BudgetParticipatif, Date>)
					BudgetParticipatif::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<BudgetParticipatif, Date>)
					BudgetParticipatif::setModifiedDate);
			attributeSetterBiConsumers.put(
				"status",
				(BiConsumer<BudgetParticipatif, Integer>)
					BudgetParticipatif::setStatus);
			attributeSetterBiConsumers.put(
				"statusByUserId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setStatusByUserId);
			attributeSetterBiConsumers.put(
				"statusByUserName",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setStatusByUserName);
			attributeSetterBiConsumers.put(
				"statusDate",
				(BiConsumer<BudgetParticipatif, Date>)
					BudgetParticipatif::setStatusDate);
			attributeSetterBiConsumers.put(
				"title",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setTitle);
			attributeSetterBiConsumers.put(
				"description",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setDescription);
			attributeSetterBiConsumers.put(
				"summary",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setSummary);
			attributeSetterBiConsumers.put(
				"budget",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setBudget);
			attributeSetterBiConsumers.put(
				"motif",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setMotif);
			attributeSetterBiConsumers.put(
				"placeTextArea",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setPlaceTextArea);
			attributeSetterBiConsumers.put(
				"inTheNameOf",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setInTheNameOf);
			attributeSetterBiConsumers.put(
				"commitment",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCommitment);
			attributeSetterBiConsumers.put(
				"citoyenLastname",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenLastname);
			attributeSetterBiConsumers.put(
				"citoyenFirstname",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenFirstname);
			attributeSetterBiConsumers.put(
				"citoyenAdresse",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenAdresse);
			attributeSetterBiConsumers.put(
				"citoyenPostalCode",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setCitoyenPostalCode);
			attributeSetterBiConsumers.put(
				"citoyenCity",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenCity);
			attributeSetterBiConsumers.put(
				"citoyenPhone",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenPhone);
			attributeSetterBiConsumers.put(
				"citoyenMobile",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenMobile);
			attributeSetterBiConsumers.put(
				"citoyenEmail",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCitoyenEmail);
			attributeSetterBiConsumers.put(
				"citoyenBirthday",
				(BiConsumer<BudgetParticipatif, Date>)
					BudgetParticipatif::setCitoyenBirthday);
			attributeSetterBiConsumers.put(
				"hasCopyright",
				(BiConsumer<BudgetParticipatif, Boolean>)
					BudgetParticipatif::setHasCopyright);
			attributeSetterBiConsumers.put(
				"videoUrl",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setVideoUrl);
			attributeSetterBiConsumers.put(
				"imageTimeline",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setImageTimeline);
			attributeSetterBiConsumers.put(
				"opacityImage",
				(BiConsumer<BudgetParticipatif, Double>)
					BudgetParticipatif::setOpacityImage);
			attributeSetterBiConsumers.put(
				"isCrush",
				(BiConsumer<BudgetParticipatif, Boolean>)
					BudgetParticipatif::setIsCrush);
			attributeSetterBiConsumers.put(
				"crushComment",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setCrushComment);
			attributeSetterBiConsumers.put(
				"publikId",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setPublikId);
			attributeSetterBiConsumers.put(
				"imageId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setImageId);
			attributeSetterBiConsumers.put(
				"filesIds",
				(BiConsumer<BudgetParticipatif, String>)
					BudgetParticipatif::setFilesIds);
			attributeSetterBiConsumers.put(
				"budgetPhaseId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setBudgetPhaseId);
			attributeSetterBiConsumers.put(
				"parentId",
				(BiConsumer<BudgetParticipatif, Long>)
					BudgetParticipatif::setParentId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getBudgetParticipatifId() {
		return _budgetParticipatifId;
	}

	@Override
	public void setBudgetParticipatifId(long budgetParticipatifId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_budgetParticipatifId = budgetParticipatifId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_title = title;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public String getDescription(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getDescription(languageId);
	}

	@Override
	public String getDescription(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getDescription(languageId, useDefault);
	}

	@Override
	public String getDescription(String languageId) {
		return LocalizationUtil.getLocalization(getDescription(), languageId);
	}

	@Override
	public String getDescription(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(
			getDescription(), languageId, useDefault);
	}

	@Override
	public String getDescriptionCurrentLanguageId() {
		return _descriptionCurrentLanguageId;
	}

	@JSON
	@Override
	public String getDescriptionCurrentValue() {
		Locale locale = getLocale(_descriptionCurrentLanguageId);

		return getDescription(locale);
	}

	@Override
	public Map<Locale, String> getDescriptionMap() {
		return LocalizationUtil.getLocalizationMap(getDescription());
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@Override
	public void setDescription(String description, Locale locale) {
		setDescription(description, locale, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setDescription(
		String description, Locale locale, Locale defaultLocale) {

		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(description)) {
			setDescription(
				LocalizationUtil.updateLocalization(
					getDescription(), "Description", description, languageId,
					defaultLanguageId));
		}
		else {
			setDescription(
				LocalizationUtil.removeLocalization(
					getDescription(), "Description", languageId));
		}
	}

	@Override
	public void setDescriptionCurrentLanguageId(String languageId) {
		_descriptionCurrentLanguageId = languageId;
	}

	@Override
	public void setDescriptionMap(Map<Locale, String> descriptionMap) {
		setDescriptionMap(descriptionMap, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setDescriptionMap(
		Map<Locale, String> descriptionMap, Locale defaultLocale) {

		if (descriptionMap == null) {
			return;
		}

		setDescription(
			LocalizationUtil.updateLocalization(
				descriptionMap, getDescription(), "Description",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public String getSummary() {
		if (_summary == null) {
			return "";
		}
		else {
			return _summary;
		}
	}

	@Override
	public void setSummary(String summary) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_summary = summary;
	}

	@JSON
	@Override
	public String getBudget() {
		if (_budget == null) {
			return "";
		}
		else {
			return _budget;
		}
	}

	@Override
	public void setBudget(String budget) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_budget = budget;
	}

	@JSON
	@Override
	public String getMotif() {
		if (_motif == null) {
			return "";
		}
		else {
			return _motif;
		}
	}

	@Override
	public String getMotif(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getMotif(languageId);
	}

	@Override
	public String getMotif(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getMotif(languageId, useDefault);
	}

	@Override
	public String getMotif(String languageId) {
		return LocalizationUtil.getLocalization(getMotif(), languageId);
	}

	@Override
	public String getMotif(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(
			getMotif(), languageId, useDefault);
	}

	@Override
	public String getMotifCurrentLanguageId() {
		return _motifCurrentLanguageId;
	}

	@JSON
	@Override
	public String getMotifCurrentValue() {
		Locale locale = getLocale(_motifCurrentLanguageId);

		return getMotif(locale);
	}

	@Override
	public Map<Locale, String> getMotifMap() {
		return LocalizationUtil.getLocalizationMap(getMotif());
	}

	@Override
	public void setMotif(String motif) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_motif = motif;
	}

	@Override
	public void setMotif(String motif, Locale locale) {
		setMotif(motif, locale, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setMotif(String motif, Locale locale, Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(motif)) {
			setMotif(
				LocalizationUtil.updateLocalization(
					getMotif(), "Motif", motif, languageId, defaultLanguageId));
		}
		else {
			setMotif(
				LocalizationUtil.removeLocalization(
					getMotif(), "Motif", languageId));
		}
	}

	@Override
	public void setMotifCurrentLanguageId(String languageId) {
		_motifCurrentLanguageId = languageId;
	}

	@Override
	public void setMotifMap(Map<Locale, String> motifMap) {
		setMotifMap(motifMap, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setMotifMap(
		Map<Locale, String> motifMap, Locale defaultLocale) {

		if (motifMap == null) {
			return;
		}

		setMotif(
			LocalizationUtil.updateLocalization(
				motifMap, getMotif(), "Motif",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public String getPlaceTextArea() {
		if (_placeTextArea == null) {
			return "";
		}
		else {
			return _placeTextArea;
		}
	}

	@Override
	public void setPlaceTextArea(String placeTextArea) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_placeTextArea = placeTextArea;
	}

	@JSON
	@Override
	public String getInTheNameOf() {
		if (_inTheNameOf == null) {
			return "";
		}
		else {
			return _inTheNameOf;
		}
	}

	@Override
	public void setInTheNameOf(String inTheNameOf) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_inTheNameOf = inTheNameOf;
	}

	@JSON
	@Override
	public String getCommitment() {
		if (_commitment == null) {
			return "";
		}
		else {
			return _commitment;
		}
	}

	@Override
	public void setCommitment(String commitment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_commitment = commitment;
	}

	@JSON
	@Override
	public String getCitoyenLastname() {
		if (_citoyenLastname == null) {
			return "";
		}
		else {
			return _citoyenLastname;
		}
	}

	@Override
	public void setCitoyenLastname(String citoyenLastname) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenLastname = citoyenLastname;
	}

	@JSON
	@Override
	public String getCitoyenFirstname() {
		if (_citoyenFirstname == null) {
			return "";
		}
		else {
			return _citoyenFirstname;
		}
	}

	@Override
	public void setCitoyenFirstname(String citoyenFirstname) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenFirstname = citoyenFirstname;
	}

	@JSON
	@Override
	public String getCitoyenAdresse() {
		if (_citoyenAdresse == null) {
			return "";
		}
		else {
			return _citoyenAdresse;
		}
	}

	@Override
	public void setCitoyenAdresse(String citoyenAdresse) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenAdresse = citoyenAdresse;
	}

	@JSON
	@Override
	public long getCitoyenPostalCode() {
		return _citoyenPostalCode;
	}

	@Override
	public void setCitoyenPostalCode(long citoyenPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenPostalCode = citoyenPostalCode;
	}

	@JSON
	@Override
	public String getCitoyenCity() {
		if (_citoyenCity == null) {
			return "";
		}
		else {
			return _citoyenCity;
		}
	}

	@Override
	public void setCitoyenCity(String citoyenCity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenCity = citoyenCity;
	}

	@JSON
	@Override
	public String getCitoyenPhone() {
		if (_citoyenPhone == null) {
			return "";
		}
		else {
			return _citoyenPhone;
		}
	}

	@Override
	public void setCitoyenPhone(String citoyenPhone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenPhone = citoyenPhone;
	}

	@JSON
	@Override
	public String getCitoyenMobile() {
		if (_citoyenMobile == null) {
			return "";
		}
		else {
			return _citoyenMobile;
		}
	}

	@Override
	public void setCitoyenMobile(String citoyenMobile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenMobile = citoyenMobile;
	}

	@JSON
	@Override
	public String getCitoyenEmail() {
		if (_citoyenEmail == null) {
			return "";
		}
		else {
			return _citoyenEmail;
		}
	}

	@Override
	public void setCitoyenEmail(String citoyenEmail) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenEmail = citoyenEmail;
	}

	@JSON
	@Override
	public Date getCitoyenBirthday() {
		return _citoyenBirthday;
	}

	@Override
	public void setCitoyenBirthday(Date citoyenBirthday) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_citoyenBirthday = citoyenBirthday;
	}

	@JSON
	@Override
	public boolean getHasCopyright() {
		return _hasCopyright;
	}

	@JSON
	@Override
	public boolean isHasCopyright() {
		return _hasCopyright;
	}

	@Override
	public void setHasCopyright(boolean hasCopyright) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hasCopyright = hasCopyright;
	}

	@JSON
	@Override
	public String getVideoUrl() {
		if (_videoUrl == null) {
			return "";
		}
		else {
			return _videoUrl;
		}
	}

	@Override
	public void setVideoUrl(String videoUrl) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_videoUrl = videoUrl;
	}

	@JSON
	@Override
	public long getImageTimeline() {
		return _imageTimeline;
	}

	@Override
	public void setImageTimeline(long imageTimeline) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imageTimeline = imageTimeline;
	}

	@JSON
	@Override
	public double getOpacityImage() {
		return _opacityImage;
	}

	@Override
	public void setOpacityImage(double opacityImage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_opacityImage = opacityImage;
	}

	@JSON
	@Override
	public boolean getIsCrush() {
		return _isCrush;
	}

	@JSON
	@Override
	public boolean isIsCrush() {
		return _isCrush;
	}

	@Override
	public void setIsCrush(boolean isCrush) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isCrush = isCrush;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalIsCrush() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("isCrush"));
	}

	@JSON
	@Override
	public String getCrushComment() {
		if (_crushComment == null) {
			return "";
		}
		else {
			return _crushComment;
		}
	}

	@Override
	public String getCrushComment(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getCrushComment(languageId);
	}

	@Override
	public String getCrushComment(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getCrushComment(languageId, useDefault);
	}

	@Override
	public String getCrushComment(String languageId) {
		return LocalizationUtil.getLocalization(getCrushComment(), languageId);
	}

	@Override
	public String getCrushComment(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(
			getCrushComment(), languageId, useDefault);
	}

	@Override
	public String getCrushCommentCurrentLanguageId() {
		return _crushCommentCurrentLanguageId;
	}

	@JSON
	@Override
	public String getCrushCommentCurrentValue() {
		Locale locale = getLocale(_crushCommentCurrentLanguageId);

		return getCrushComment(locale);
	}

	@Override
	public Map<Locale, String> getCrushCommentMap() {
		return LocalizationUtil.getLocalizationMap(getCrushComment());
	}

	@Override
	public void setCrushComment(String crushComment) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_crushComment = crushComment;
	}

	@Override
	public void setCrushComment(String crushComment, Locale locale) {
		setCrushComment(crushComment, locale, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setCrushComment(
		String crushComment, Locale locale, Locale defaultLocale) {

		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(crushComment)) {
			setCrushComment(
				LocalizationUtil.updateLocalization(
					getCrushComment(), "CrushComment", crushComment, languageId,
					defaultLanguageId));
		}
		else {
			setCrushComment(
				LocalizationUtil.removeLocalization(
					getCrushComment(), "CrushComment", languageId));
		}
	}

	@Override
	public void setCrushCommentCurrentLanguageId(String languageId) {
		_crushCommentCurrentLanguageId = languageId;
	}

	@Override
	public void setCrushCommentMap(Map<Locale, String> crushCommentMap) {
		setCrushCommentMap(crushCommentMap, LocaleUtil.getSiteDefault());
	}

	@Override
	public void setCrushCommentMap(
		Map<Locale, String> crushCommentMap, Locale defaultLocale) {

		if (crushCommentMap == null) {
			return;
		}

		setCrushComment(
			LocalizationUtil.updateLocalization(
				crushCommentMap, getCrushComment(), "CrushComment",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public String getPublikId() {
		if (_publikId == null) {
			return "";
		}
		else {
			return _publikId;
		}
	}

	@Override
	public void setPublikId(String publikId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_publikId = publikId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalPublikId() {
		return getColumnOriginalValue("publikId");
	}

	@JSON
	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imageId = imageId;
	}

	@JSON
	@Override
	public String getFilesIds() {
		if (_filesIds == null) {
			return "";
		}
		else {
			return _filesIds;
		}
	}

	@Override
	public void setFilesIds(String filesIds) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_filesIds = filesIds;
	}

	@JSON
	@Override
	public long getBudgetPhaseId() {
		return _budgetPhaseId;
	}

	@Override
	public void setBudgetPhaseId(long budgetPhaseId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_budgetPhaseId = budgetPhaseId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBudgetPhaseId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("budgetPhaseId"));
	}

	@JSON
	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_parentId = parentId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalParentId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("parentId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(BudgetParticipatif.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), BudgetParticipatif.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> descriptionMap = getDescriptionMap();

		for (Map.Entry<Locale, String> entry : descriptionMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		Map<Locale, String> motifMap = getMotifMap();

		for (Map.Entry<Locale, String> entry : motifMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		Map<Locale, String> crushCommentMap = getCrushCommentMap();

		for (Map.Entry<Locale, String> entry : crushCommentMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(
			new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getDescription();

		if (xml == null) {
			return "";
		}

		Locale defaultLocale = LocaleUtil.getSiteDefault();

		return LocalizationUtil.getDefaultLanguageId(xml, defaultLocale);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		Locale defaultLocale = LocaleUtil.fromLanguageId(
			getDefaultLanguageId());

		Locale[] availableLocales = LocaleUtil.fromLanguageIds(
			getAvailableLanguageIds());

		Locale defaultImportLocale = LocalizationUtil.getDefaultImportLocale(
			BudgetParticipatif.class.getName(), getPrimaryKey(), defaultLocale,
			availableLocales);

		prepareLocalizedFieldsForImport(defaultImportLocale);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {

		Locale defaultLocale = LocaleUtil.getSiteDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String description = getDescription(defaultLocale);

		if (Validator.isNull(description)) {
			setDescription(
				getDescription(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setDescription(
				getDescription(defaultLocale), defaultLocale, defaultLocale);
		}

		String motif = getMotif(defaultLocale);

		if (Validator.isNull(motif)) {
			setMotif(getMotif(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setMotif(getMotif(defaultLocale), defaultLocale, defaultLocale);
		}

		String crushComment = getCrushComment(defaultLocale);

		if (Validator.isNull(crushComment)) {
			setCrushComment(
				getCrushComment(modelDefaultLanguageId), defaultLocale);
		}
		else {
			setCrushComment(
				getCrushComment(defaultLocale), defaultLocale, defaultLocale);
		}
	}

	@Override
	public BudgetParticipatif toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, BudgetParticipatif>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BudgetParticipatifImpl budgetParticipatifImpl =
			new BudgetParticipatifImpl();

		budgetParticipatifImpl.setUuid(getUuid());
		budgetParticipatifImpl.setBudgetParticipatifId(
			getBudgetParticipatifId());
		budgetParticipatifImpl.setGroupId(getGroupId());
		budgetParticipatifImpl.setCompanyId(getCompanyId());
		budgetParticipatifImpl.setUserId(getUserId());
		budgetParticipatifImpl.setUserName(getUserName());
		budgetParticipatifImpl.setCreateDate(getCreateDate());
		budgetParticipatifImpl.setModifiedDate(getModifiedDate());
		budgetParticipatifImpl.setStatus(getStatus());
		budgetParticipatifImpl.setStatusByUserId(getStatusByUserId());
		budgetParticipatifImpl.setStatusByUserName(getStatusByUserName());
		budgetParticipatifImpl.setStatusDate(getStatusDate());
		budgetParticipatifImpl.setTitle(getTitle());
		budgetParticipatifImpl.setDescription(getDescription());
		budgetParticipatifImpl.setSummary(getSummary());
		budgetParticipatifImpl.setBudget(getBudget());
		budgetParticipatifImpl.setMotif(getMotif());
		budgetParticipatifImpl.setPlaceTextArea(getPlaceTextArea());
		budgetParticipatifImpl.setInTheNameOf(getInTheNameOf());
		budgetParticipatifImpl.setCommitment(getCommitment());
		budgetParticipatifImpl.setCitoyenLastname(getCitoyenLastname());
		budgetParticipatifImpl.setCitoyenFirstname(getCitoyenFirstname());
		budgetParticipatifImpl.setCitoyenAdresse(getCitoyenAdresse());
		budgetParticipatifImpl.setCitoyenPostalCode(getCitoyenPostalCode());
		budgetParticipatifImpl.setCitoyenCity(getCitoyenCity());
		budgetParticipatifImpl.setCitoyenPhone(getCitoyenPhone());
		budgetParticipatifImpl.setCitoyenMobile(getCitoyenMobile());
		budgetParticipatifImpl.setCitoyenEmail(getCitoyenEmail());
		budgetParticipatifImpl.setCitoyenBirthday(getCitoyenBirthday());
		budgetParticipatifImpl.setHasCopyright(isHasCopyright());
		budgetParticipatifImpl.setVideoUrl(getVideoUrl());
		budgetParticipatifImpl.setImageTimeline(getImageTimeline());
		budgetParticipatifImpl.setOpacityImage(getOpacityImage());
		budgetParticipatifImpl.setIsCrush(isIsCrush());
		budgetParticipatifImpl.setCrushComment(getCrushComment());
		budgetParticipatifImpl.setPublikId(getPublikId());
		budgetParticipatifImpl.setImageId(getImageId());
		budgetParticipatifImpl.setFilesIds(getFilesIds());
		budgetParticipatifImpl.setBudgetPhaseId(getBudgetPhaseId());
		budgetParticipatifImpl.setParentId(getParentId());

		budgetParticipatifImpl.resetOriginalValues();

		return budgetParticipatifImpl;
	}

	@Override
	public BudgetParticipatif cloneWithOriginalValues() {
		BudgetParticipatifImpl budgetParticipatifImpl =
			new BudgetParticipatifImpl();

		budgetParticipatifImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		budgetParticipatifImpl.setBudgetParticipatifId(
			this.<Long>getColumnOriginalValue("budgetParticipatifId"));
		budgetParticipatifImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		budgetParticipatifImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		budgetParticipatifImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		budgetParticipatifImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		budgetParticipatifImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		budgetParticipatifImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		budgetParticipatifImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		budgetParticipatifImpl.setStatusByUserId(
			this.<Long>getColumnOriginalValue("statusByUserId"));
		budgetParticipatifImpl.setStatusByUserName(
			this.<String>getColumnOriginalValue("statusByUserName"));
		budgetParticipatifImpl.setStatusDate(
			this.<Date>getColumnOriginalValue("statusDate"));
		budgetParticipatifImpl.setTitle(
			this.<String>getColumnOriginalValue("title"));
		budgetParticipatifImpl.setDescription(
			this.<String>getColumnOriginalValue("description"));
		budgetParticipatifImpl.setSummary(
			this.<String>getColumnOriginalValue("summary"));
		budgetParticipatifImpl.setBudget(
			this.<String>getColumnOriginalValue("budget"));
		budgetParticipatifImpl.setMotif(
			this.<String>getColumnOriginalValue("motif"));
		budgetParticipatifImpl.setPlaceTextArea(
			this.<String>getColumnOriginalValue("placeTextArea"));
		budgetParticipatifImpl.setInTheNameOf(
			this.<String>getColumnOriginalValue("inTheNameOf"));
		budgetParticipatifImpl.setCommitment(
			this.<String>getColumnOriginalValue("commitment"));
		budgetParticipatifImpl.setCitoyenLastname(
			this.<String>getColumnOriginalValue("citoyenLastname"));
		budgetParticipatifImpl.setCitoyenFirstname(
			this.<String>getColumnOriginalValue("citoyenFirstname"));
		budgetParticipatifImpl.setCitoyenAdresse(
			this.<String>getColumnOriginalValue("citoyenAdresse"));
		budgetParticipatifImpl.setCitoyenPostalCode(
			this.<Long>getColumnOriginalValue("citoyenPostalCode"));
		budgetParticipatifImpl.setCitoyenCity(
			this.<String>getColumnOriginalValue("citoyenCity"));
		budgetParticipatifImpl.setCitoyenPhone(
			this.<String>getColumnOriginalValue("citoyenPhone"));
		budgetParticipatifImpl.setCitoyenMobile(
			this.<String>getColumnOriginalValue("citoyenMobile"));
		budgetParticipatifImpl.setCitoyenEmail(
			this.<String>getColumnOriginalValue("citoyenEmail"));
		budgetParticipatifImpl.setCitoyenBirthday(
			this.<Date>getColumnOriginalValue("citoyenBirthday"));
		budgetParticipatifImpl.setHasCopyright(
			this.<Boolean>getColumnOriginalValue("hasCopyright"));
		budgetParticipatifImpl.setVideoUrl(
			this.<String>getColumnOriginalValue("videoUrl"));
		budgetParticipatifImpl.setImageTimeline(
			this.<Long>getColumnOriginalValue("imageTimeline"));
		budgetParticipatifImpl.setOpacityImage(
			this.<Double>getColumnOriginalValue("opacityImage"));
		budgetParticipatifImpl.setIsCrush(
			this.<Boolean>getColumnOriginalValue("isCrush"));
		budgetParticipatifImpl.setCrushComment(
			this.<String>getColumnOriginalValue("crushComment"));
		budgetParticipatifImpl.setPublikId(
			this.<String>getColumnOriginalValue("publikId"));
		budgetParticipatifImpl.setImageId(
			this.<Long>getColumnOriginalValue("imageId"));
		budgetParticipatifImpl.setFilesIds(
			this.<String>getColumnOriginalValue("filesIds"));
		budgetParticipatifImpl.setBudgetPhaseId(
			this.<Long>getColumnOriginalValue("budgetPhaseId"));
		budgetParticipatifImpl.setParentId(
			this.<Long>getColumnOriginalValue("parentId"));

		return budgetParticipatifImpl;
	}

	@Override
	public int compareTo(BudgetParticipatif budgetParticipatif) {
		int value = 0;

		value = DateUtil.compareTo(
			getModifiedDate(), budgetParticipatif.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof BudgetParticipatif)) {
			return false;
		}

		BudgetParticipatif budgetParticipatif = (BudgetParticipatif)object;

		long primaryKey = budgetParticipatif.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<BudgetParticipatif> toCacheModel() {
		BudgetParticipatifCacheModel budgetParticipatifCacheModel =
			new BudgetParticipatifCacheModel();

		budgetParticipatifCacheModel.uuid = getUuid();

		String uuid = budgetParticipatifCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			budgetParticipatifCacheModel.uuid = null;
		}

		budgetParticipatifCacheModel.budgetParticipatifId =
			getBudgetParticipatifId();

		budgetParticipatifCacheModel.groupId = getGroupId();

		budgetParticipatifCacheModel.companyId = getCompanyId();

		budgetParticipatifCacheModel.userId = getUserId();

		budgetParticipatifCacheModel.userName = getUserName();

		String userName = budgetParticipatifCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			budgetParticipatifCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			budgetParticipatifCacheModel.createDate = createDate.getTime();
		}
		else {
			budgetParticipatifCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			budgetParticipatifCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			budgetParticipatifCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		budgetParticipatifCacheModel.status = getStatus();

		budgetParticipatifCacheModel.statusByUserId = getStatusByUserId();

		budgetParticipatifCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = budgetParticipatifCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			budgetParticipatifCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			budgetParticipatifCacheModel.statusDate = statusDate.getTime();
		}
		else {
			budgetParticipatifCacheModel.statusDate = Long.MIN_VALUE;
		}

		budgetParticipatifCacheModel.title = getTitle();

		String title = budgetParticipatifCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			budgetParticipatifCacheModel.title = null;
		}

		budgetParticipatifCacheModel.description = getDescription();

		String description = budgetParticipatifCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			budgetParticipatifCacheModel.description = null;
		}

		budgetParticipatifCacheModel.summary = getSummary();

		String summary = budgetParticipatifCacheModel.summary;

		if ((summary != null) && (summary.length() == 0)) {
			budgetParticipatifCacheModel.summary = null;
		}

		budgetParticipatifCacheModel.budget = getBudget();

		String budget = budgetParticipatifCacheModel.budget;

		if ((budget != null) && (budget.length() == 0)) {
			budgetParticipatifCacheModel.budget = null;
		}

		budgetParticipatifCacheModel.motif = getMotif();

		String motif = budgetParticipatifCacheModel.motif;

		if ((motif != null) && (motif.length() == 0)) {
			budgetParticipatifCacheModel.motif = null;
		}

		budgetParticipatifCacheModel.placeTextArea = getPlaceTextArea();

		String placeTextArea = budgetParticipatifCacheModel.placeTextArea;

		if ((placeTextArea != null) && (placeTextArea.length() == 0)) {
			budgetParticipatifCacheModel.placeTextArea = null;
		}

		budgetParticipatifCacheModel.inTheNameOf = getInTheNameOf();

		String inTheNameOf = budgetParticipatifCacheModel.inTheNameOf;

		if ((inTheNameOf != null) && (inTheNameOf.length() == 0)) {
			budgetParticipatifCacheModel.inTheNameOf = null;
		}

		budgetParticipatifCacheModel.commitment = getCommitment();

		String commitment = budgetParticipatifCacheModel.commitment;

		if ((commitment != null) && (commitment.length() == 0)) {
			budgetParticipatifCacheModel.commitment = null;
		}

		budgetParticipatifCacheModel.citoyenLastname = getCitoyenLastname();

		String citoyenLastname = budgetParticipatifCacheModel.citoyenLastname;

		if ((citoyenLastname != null) && (citoyenLastname.length() == 0)) {
			budgetParticipatifCacheModel.citoyenLastname = null;
		}

		budgetParticipatifCacheModel.citoyenFirstname = getCitoyenFirstname();

		String citoyenFirstname = budgetParticipatifCacheModel.citoyenFirstname;

		if ((citoyenFirstname != null) && (citoyenFirstname.length() == 0)) {
			budgetParticipatifCacheModel.citoyenFirstname = null;
		}

		budgetParticipatifCacheModel.citoyenAdresse = getCitoyenAdresse();

		String citoyenAdresse = budgetParticipatifCacheModel.citoyenAdresse;

		if ((citoyenAdresse != null) && (citoyenAdresse.length() == 0)) {
			budgetParticipatifCacheModel.citoyenAdresse = null;
		}

		budgetParticipatifCacheModel.citoyenPostalCode = getCitoyenPostalCode();

		budgetParticipatifCacheModel.citoyenCity = getCitoyenCity();

		String citoyenCity = budgetParticipatifCacheModel.citoyenCity;

		if ((citoyenCity != null) && (citoyenCity.length() == 0)) {
			budgetParticipatifCacheModel.citoyenCity = null;
		}

		budgetParticipatifCacheModel.citoyenPhone = getCitoyenPhone();

		String citoyenPhone = budgetParticipatifCacheModel.citoyenPhone;

		if ((citoyenPhone != null) && (citoyenPhone.length() == 0)) {
			budgetParticipatifCacheModel.citoyenPhone = null;
		}

		budgetParticipatifCacheModel.citoyenMobile = getCitoyenMobile();

		String citoyenMobile = budgetParticipatifCacheModel.citoyenMobile;

		if ((citoyenMobile != null) && (citoyenMobile.length() == 0)) {
			budgetParticipatifCacheModel.citoyenMobile = null;
		}

		budgetParticipatifCacheModel.citoyenEmail = getCitoyenEmail();

		String citoyenEmail = budgetParticipatifCacheModel.citoyenEmail;

		if ((citoyenEmail != null) && (citoyenEmail.length() == 0)) {
			budgetParticipatifCacheModel.citoyenEmail = null;
		}

		Date citoyenBirthday = getCitoyenBirthday();

		if (citoyenBirthday != null) {
			budgetParticipatifCacheModel.citoyenBirthday =
				citoyenBirthday.getTime();
		}
		else {
			budgetParticipatifCacheModel.citoyenBirthday = Long.MIN_VALUE;
		}

		budgetParticipatifCacheModel.hasCopyright = isHasCopyright();

		budgetParticipatifCacheModel.videoUrl = getVideoUrl();

		String videoUrl = budgetParticipatifCacheModel.videoUrl;

		if ((videoUrl != null) && (videoUrl.length() == 0)) {
			budgetParticipatifCacheModel.videoUrl = null;
		}

		budgetParticipatifCacheModel.imageTimeline = getImageTimeline();

		budgetParticipatifCacheModel.opacityImage = getOpacityImage();

		budgetParticipatifCacheModel.isCrush = isIsCrush();

		budgetParticipatifCacheModel.crushComment = getCrushComment();

		String crushComment = budgetParticipatifCacheModel.crushComment;

		if ((crushComment != null) && (crushComment.length() == 0)) {
			budgetParticipatifCacheModel.crushComment = null;
		}

		budgetParticipatifCacheModel.publikId = getPublikId();

		String publikId = budgetParticipatifCacheModel.publikId;

		if ((publikId != null) && (publikId.length() == 0)) {
			budgetParticipatifCacheModel.publikId = null;
		}

		budgetParticipatifCacheModel.imageId = getImageId();

		budgetParticipatifCacheModel.filesIds = getFilesIds();

		String filesIds = budgetParticipatifCacheModel.filesIds;

		if ((filesIds != null) && (filesIds.length() == 0)) {
			budgetParticipatifCacheModel.filesIds = null;
		}

		budgetParticipatifCacheModel.budgetPhaseId = getBudgetPhaseId();

		budgetParticipatifCacheModel.parentId = getParentId();

		return budgetParticipatifCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<BudgetParticipatif, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<BudgetParticipatif, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<BudgetParticipatif, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(BudgetParticipatif)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, BudgetParticipatif>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					BudgetParticipatif.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _budgetParticipatifId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private String _title;
	private String _description;
	private String _descriptionCurrentLanguageId;
	private String _summary;
	private String _budget;
	private String _motif;
	private String _motifCurrentLanguageId;
	private String _placeTextArea;
	private String _inTheNameOf;
	private String _commitment;
	private String _citoyenLastname;
	private String _citoyenFirstname;
	private String _citoyenAdresse;
	private long _citoyenPostalCode;
	private String _citoyenCity;
	private String _citoyenPhone;
	private String _citoyenMobile;
	private String _citoyenEmail;
	private Date _citoyenBirthday;
	private boolean _hasCopyright;
	private String _videoUrl;
	private long _imageTimeline;
	private double _opacityImage;
	private boolean _isCrush;
	private String _crushComment;
	private String _crushCommentCurrentLanguageId;
	private String _publikId;
	private long _imageId;
	private String _filesIds;
	private long _budgetPhaseId;
	private long _parentId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<BudgetParticipatif, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((BudgetParticipatif)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"budgetParticipatifId", _budgetParticipatifId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
		_columnOriginalValues.put("title", _title);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("summary", _summary);
		_columnOriginalValues.put("budget", _budget);
		_columnOriginalValues.put("motif", _motif);
		_columnOriginalValues.put("placeTextArea", _placeTextArea);
		_columnOriginalValues.put("inTheNameOf", _inTheNameOf);
		_columnOriginalValues.put("commitment", _commitment);
		_columnOriginalValues.put("citoyenLastname", _citoyenLastname);
		_columnOriginalValues.put("citoyenFirstname", _citoyenFirstname);
		_columnOriginalValues.put("citoyenAdresse", _citoyenAdresse);
		_columnOriginalValues.put("citoyenPostalCode", _citoyenPostalCode);
		_columnOriginalValues.put("citoyenCity", _citoyenCity);
		_columnOriginalValues.put("citoyenPhone", _citoyenPhone);
		_columnOriginalValues.put("citoyenMobile", _citoyenMobile);
		_columnOriginalValues.put("citoyenEmail", _citoyenEmail);
		_columnOriginalValues.put("citoyenBirthday", _citoyenBirthday);
		_columnOriginalValues.put("hasCopyright", _hasCopyright);
		_columnOriginalValues.put("videoUrl", _videoUrl);
		_columnOriginalValues.put("imageTimeline", _imageTimeline);
		_columnOriginalValues.put("opacityImage", _opacityImage);
		_columnOriginalValues.put("isCrush", _isCrush);
		_columnOriginalValues.put("crushComment", _crushComment);
		_columnOriginalValues.put("publikId", _publikId);
		_columnOriginalValues.put("imageId", _imageId);
		_columnOriginalValues.put("filesIds", _filesIds);
		_columnOriginalValues.put("budgetPhaseId", _budgetPhaseId);
		_columnOriginalValues.put("parentId", _parentId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("budgetParticipatifId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("status", 256L);

		columnBitmasks.put("statusByUserId", 512L);

		columnBitmasks.put("statusByUserName", 1024L);

		columnBitmasks.put("statusDate", 2048L);

		columnBitmasks.put("title", 4096L);

		columnBitmasks.put("description", 8192L);

		columnBitmasks.put("summary", 16384L);

		columnBitmasks.put("budget", 32768L);

		columnBitmasks.put("motif", 65536L);

		columnBitmasks.put("placeTextArea", 131072L);

		columnBitmasks.put("inTheNameOf", 262144L);

		columnBitmasks.put("commitment", 524288L);

		columnBitmasks.put("citoyenLastname", 1048576L);

		columnBitmasks.put("citoyenFirstname", 2097152L);

		columnBitmasks.put("citoyenAdresse", 4194304L);

		columnBitmasks.put("citoyenPostalCode", 8388608L);

		columnBitmasks.put("citoyenCity", 16777216L);

		columnBitmasks.put("citoyenPhone", 33554432L);

		columnBitmasks.put("citoyenMobile", 67108864L);

		columnBitmasks.put("citoyenEmail", 134217728L);

		columnBitmasks.put("citoyenBirthday", 268435456L);

		columnBitmasks.put("hasCopyright", 536870912L);

		columnBitmasks.put("videoUrl", 1073741824L);

		columnBitmasks.put("imageTimeline", 2147483648L);

		columnBitmasks.put("opacityImage", 4294967296L);

		columnBitmasks.put("isCrush", 8589934592L);

		columnBitmasks.put("crushComment", 17179869184L);

		columnBitmasks.put("publikId", 34359738368L);

		columnBitmasks.put("imageId", 68719476736L);

		columnBitmasks.put("filesIds", 137438953472L);

		columnBitmasks.put("budgetPhaseId", 274877906944L);

		columnBitmasks.put("parentId", 549755813888L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private BudgetParticipatif _escapedModel;

}