/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.project.model.impl;

import aQute.bnd.annotation.ProviderType;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import eu.strasbourg.service.project.model.BudgetPhase;
import eu.strasbourg.service.project.model.BudgetPhaseModel;
import eu.strasbourg.service.project.model.BudgetPhaseSoap;

import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BudgetPhase service. Represents a row in the &quot;project_BudgetPhase&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link BudgetPhaseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BudgetPhaseImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see BudgetPhaseImpl
 * @see BudgetPhase
 * @see BudgetPhaseModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class BudgetPhaseModelImpl extends BaseModelImpl<BudgetPhase>
	implements BudgetPhaseModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a budget phase model instance should use the {@link BudgetPhase} interface instead.
	 */
	public static final String TABLE_NAME = "project_BudgetPhase";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "budgetPhaseId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "numberOfVote", Types.BIGINT },
			{ "isActive", Types.BOOLEAN },
			{ "beginDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "beginVoteDate", Types.TIMESTAMP },
			{ "endVoteDate", Types.TIMESTAMP },
			{ "publikId", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("budgetPhaseId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("numberOfVote", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("isActive", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("beginDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("beginVoteDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("endVoteDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("publikId", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table project_BudgetPhase (uuid_ VARCHAR(75) null,budgetPhaseId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,name VARCHAR(75) null,description VARCHAR(75) null,numberOfVote LONG,isActive BOOLEAN,beginDate DATE null,endDate DATE null,beginVoteDate DATE null,endVoteDate DATE null,publikId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table project_BudgetPhase";
	public static final String ORDER_BY_JPQL = " ORDER BY budgetPhase.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY project_BudgetPhase.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(eu.strasbourg.service.project.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.eu.strasbourg.service.project.model.BudgetPhase"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(eu.strasbourg.service.project.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.eu.strasbourg.service.project.model.BudgetPhase"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(eu.strasbourg.service.project.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.eu.strasbourg.service.project.model.BudgetPhase"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long PUBLIKID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long NAME_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BudgetPhase toModel(BudgetPhaseSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BudgetPhase model = new BudgetPhaseImpl();

		model.setUuid(soapModel.getUuid());
		model.setBudgetPhaseId(soapModel.getBudgetPhaseId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusByUserId(soapModel.getStatusByUserId());
		model.setStatusByUserName(soapModel.getStatusByUserName());
		model.setStatusDate(soapModel.getStatusDate());
		model.setName(soapModel.getName());
		model.setDescription(soapModel.getDescription());
		model.setNumberOfVote(soapModel.getNumberOfVote());
		model.setIsActive(soapModel.getIsActive());
		model.setBeginDate(soapModel.getBeginDate());
		model.setEndDate(soapModel.getEndDate());
		model.setBeginVoteDate(soapModel.getBeginVoteDate());
		model.setEndVoteDate(soapModel.getEndVoteDate());
		model.setPublikId(soapModel.getPublikId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BudgetPhase> toModels(BudgetPhaseSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BudgetPhase> models = new ArrayList<BudgetPhase>(soapModels.length);

		for (BudgetPhaseSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(eu.strasbourg.service.project.service.util.PropsUtil.get(
				"lock.expiration.time.eu.strasbourg.service.project.model.BudgetPhase"));

	public BudgetPhaseModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _budgetPhaseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBudgetPhaseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _budgetPhaseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BudgetPhase.class;
	}

	@Override
	public String getModelClassName() {
		return BudgetPhase.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("budgetPhaseId", getBudgetPhaseId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("numberOfVote", getNumberOfVote());
		attributes.put("isActive", getIsActive());
		attributes.put("beginDate", getBeginDate());
		attributes.put("endDate", getEndDate());
		attributes.put("beginVoteDate", getBeginVoteDate());
		attributes.put("endVoteDate", getEndVoteDate());
		attributes.put("publikId", getPublikId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long budgetPhaseId = (Long)attributes.get("budgetPhaseId");

		if (budgetPhaseId != null) {
			setBudgetPhaseId(budgetPhaseId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long numberOfVote = (Long)attributes.get("numberOfVote");

		if (numberOfVote != null) {
			setNumberOfVote(numberOfVote);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Date beginDate = (Date)attributes.get("beginDate");

		if (beginDate != null) {
			setBeginDate(beginDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Date beginVoteDate = (Date)attributes.get("beginVoteDate");

		if (beginVoteDate != null) {
			setBeginVoteDate(beginVoteDate);
		}

		Date endVoteDate = (Date)attributes.get("endVoteDate");

		if (endVoteDate != null) {
			setEndVoteDate(endVoteDate);
		}

		String publikId = (String)attributes.get("publikId");

		if (publikId != null) {
			setPublikId(publikId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getBudgetPhaseId() {
		return _budgetPhaseId;
	}

	@Override
	public void setBudgetPhaseId(long budgetPhaseId) {
		_budgetPhaseId = budgetPhaseId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		_name = name;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public long getNumberOfVote() {
		return _numberOfVote;
	}

	@Override
	public void setNumberOfVote(long numberOfVote) {
		_numberOfVote = numberOfVote;
	}

	@JSON
	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@JSON
	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		_isActive = isActive;
	}

	@JSON
	@Override
	public Date getBeginDate() {
		return _beginDate;
	}

	@Override
	public void setBeginDate(Date beginDate) {
		_beginDate = beginDate;
	}

	@JSON
	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@JSON
	@Override
	public Date getBeginVoteDate() {
		return _beginVoteDate;
	}

	@Override
	public void setBeginVoteDate(Date beginVoteDate) {
		_beginVoteDate = beginVoteDate;
	}

	@JSON
	@Override
	public Date getEndVoteDate() {
		return _endVoteDate;
	}

	@Override
	public void setEndVoteDate(Date endVoteDate) {
		_endVoteDate = endVoteDate;
	}

	@JSON
	@Override
	public String getPublikId() {
		if (_publikId == null) {
			return StringPool.BLANK;
		}
		else {
			return _publikId;
		}
	}

	@Override
	public void setPublikId(String publikId) {
		_columnBitmask |= PUBLIKID_COLUMN_BITMASK;

		if (_originalPublikId == null) {
			_originalPublikId = _publikId;
		}

		_publikId = publikId;
	}

	public String getOriginalPublikId() {
		return GetterUtil.getString(_originalPublikId);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				BudgetPhase.class.getName()));
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			BudgetPhase.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BudgetPhase toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BudgetPhase)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BudgetPhaseImpl budgetPhaseImpl = new BudgetPhaseImpl();

		budgetPhaseImpl.setUuid(getUuid());
		budgetPhaseImpl.setBudgetPhaseId(getBudgetPhaseId());
		budgetPhaseImpl.setGroupId(getGroupId());
		budgetPhaseImpl.setCompanyId(getCompanyId());
		budgetPhaseImpl.setUserId(getUserId());
		budgetPhaseImpl.setUserName(getUserName());
		budgetPhaseImpl.setCreateDate(getCreateDate());
		budgetPhaseImpl.setModifiedDate(getModifiedDate());
		budgetPhaseImpl.setStatus(getStatus());
		budgetPhaseImpl.setStatusByUserId(getStatusByUserId());
		budgetPhaseImpl.setStatusByUserName(getStatusByUserName());
		budgetPhaseImpl.setStatusDate(getStatusDate());
		budgetPhaseImpl.setName(getName());
		budgetPhaseImpl.setDescription(getDescription());
		budgetPhaseImpl.setNumberOfVote(getNumberOfVote());
		budgetPhaseImpl.setIsActive(getIsActive());
		budgetPhaseImpl.setBeginDate(getBeginDate());
		budgetPhaseImpl.setEndDate(getEndDate());
		budgetPhaseImpl.setBeginVoteDate(getBeginVoteDate());
		budgetPhaseImpl.setEndVoteDate(getEndVoteDate());
		budgetPhaseImpl.setPublikId(getPublikId());

		budgetPhaseImpl.resetOriginalValues();

		return budgetPhaseImpl;
	}

	@Override
	public int compareTo(BudgetPhase budgetPhase) {
		int value = 0;

		value = getName().compareTo(budgetPhase.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BudgetPhase)) {
			return false;
		}

		BudgetPhase budgetPhase = (BudgetPhase)obj;

		long primaryKey = budgetPhase.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		BudgetPhaseModelImpl budgetPhaseModelImpl = this;

		budgetPhaseModelImpl._originalUuid = budgetPhaseModelImpl._uuid;

		budgetPhaseModelImpl._originalGroupId = budgetPhaseModelImpl._groupId;

		budgetPhaseModelImpl._setOriginalGroupId = false;

		budgetPhaseModelImpl._originalCompanyId = budgetPhaseModelImpl._companyId;

		budgetPhaseModelImpl._setOriginalCompanyId = false;

		budgetPhaseModelImpl._setModifiedDate = false;

		budgetPhaseModelImpl._originalPublikId = budgetPhaseModelImpl._publikId;

		budgetPhaseModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BudgetPhase> toCacheModel() {
		BudgetPhaseCacheModel budgetPhaseCacheModel = new BudgetPhaseCacheModel();

		budgetPhaseCacheModel.uuid = getUuid();

		String uuid = budgetPhaseCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			budgetPhaseCacheModel.uuid = null;
		}

		budgetPhaseCacheModel.budgetPhaseId = getBudgetPhaseId();

		budgetPhaseCacheModel.groupId = getGroupId();

		budgetPhaseCacheModel.companyId = getCompanyId();

		budgetPhaseCacheModel.userId = getUserId();

		budgetPhaseCacheModel.userName = getUserName();

		String userName = budgetPhaseCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			budgetPhaseCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			budgetPhaseCacheModel.createDate = createDate.getTime();
		}
		else {
			budgetPhaseCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			budgetPhaseCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			budgetPhaseCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		budgetPhaseCacheModel.status = getStatus();

		budgetPhaseCacheModel.statusByUserId = getStatusByUserId();

		budgetPhaseCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = budgetPhaseCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			budgetPhaseCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			budgetPhaseCacheModel.statusDate = statusDate.getTime();
		}
		else {
			budgetPhaseCacheModel.statusDate = Long.MIN_VALUE;
		}

		budgetPhaseCacheModel.name = getName();

		String name = budgetPhaseCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			budgetPhaseCacheModel.name = null;
		}

		budgetPhaseCacheModel.description = getDescription();

		String description = budgetPhaseCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			budgetPhaseCacheModel.description = null;
		}

		budgetPhaseCacheModel.numberOfVote = getNumberOfVote();

		budgetPhaseCacheModel.isActive = getIsActive();

		Date beginDate = getBeginDate();

		if (beginDate != null) {
			budgetPhaseCacheModel.beginDate = beginDate.getTime();
		}
		else {
			budgetPhaseCacheModel.beginDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			budgetPhaseCacheModel.endDate = endDate.getTime();
		}
		else {
			budgetPhaseCacheModel.endDate = Long.MIN_VALUE;
		}

		Date beginVoteDate = getBeginVoteDate();

		if (beginVoteDate != null) {
			budgetPhaseCacheModel.beginVoteDate = beginVoteDate.getTime();
		}
		else {
			budgetPhaseCacheModel.beginVoteDate = Long.MIN_VALUE;
		}

		Date endVoteDate = getEndVoteDate();

		if (endVoteDate != null) {
			budgetPhaseCacheModel.endVoteDate = endVoteDate.getTime();
		}
		else {
			budgetPhaseCacheModel.endVoteDate = Long.MIN_VALUE;
		}

		budgetPhaseCacheModel.publikId = getPublikId();

		String publikId = budgetPhaseCacheModel.publikId;

		if ((publikId != null) && (publikId.length() == 0)) {
			budgetPhaseCacheModel.publikId = null;
		}

		return budgetPhaseCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", budgetPhaseId=");
		sb.append(getBudgetPhaseId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", numberOfVote=");
		sb.append(getNumberOfVote());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", beginDate=");
		sb.append(getBeginDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", beginVoteDate=");
		sb.append(getBeginVoteDate());
		sb.append(", endVoteDate=");
		sb.append(getEndVoteDate());
		sb.append(", publikId=");
		sb.append(getPublikId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("eu.strasbourg.service.project.model.BudgetPhase");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetPhaseId</column-name><column-value><![CDATA[");
		sb.append(getBudgetPhaseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfVote</column-name><column-value><![CDATA[");
		sb.append(getNumberOfVote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beginDate</column-name><column-value><![CDATA[");
		sb.append(getBeginDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beginVoteDate</column-name><column-value><![CDATA[");
		sb.append(getBeginVoteDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endVoteDate</column-name><column-value><![CDATA[");
		sb.append(getEndVoteDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publikId</column-name><column-value><![CDATA[");
		sb.append(getPublikId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = BudgetPhase.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			BudgetPhase.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _budgetPhaseId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private String _name;
	private String _description;
	private long _numberOfVote;
	private boolean _isActive;
	private Date _beginDate;
	private Date _endDate;
	private Date _beginVoteDate;
	private Date _endVoteDate;
	private String _publikId;
	private String _originalPublikId;
	private long _columnBitmask;
	private BudgetPhase _escapedModel;
}