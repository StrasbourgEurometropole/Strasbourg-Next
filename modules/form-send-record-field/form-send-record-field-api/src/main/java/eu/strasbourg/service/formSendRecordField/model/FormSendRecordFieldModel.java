/**
 * SPDX-FileCopyrightText: (c) 2023 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package eu.strasbourg.service.formSendRecordField.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the FormSendRecordField service. Represents a row in the &quot;formSendRecordField_FormSendRecordField&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.formSendRecordField.model.impl.FormSendRecordFieldModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.formSendRecordField.model.impl.FormSendRecordFieldImpl</code>.
 * </p>
 *
 * @author Ang√©lique Zunino
 * @see FormSendRecordField
 * @generated
 */
@ProviderType
public interface FormSendRecordFieldModel
	extends BaseModel<FormSendRecordField>, GroupedModel, LocalizedModel,
			ShardedModel, StagedAuditedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a form send record field model instance should use the {@link FormSendRecordField} interface instead.
	 */

	/**
	 * Returns the primary key of this form send record field.
	 *
	 * @return the primary key of this form send record field
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this form send record field.
	 *
	 * @param primaryKey the primary key of this form send record field
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this form send record field.
	 *
	 * @return the uuid of this form send record field
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this form send record field.
	 *
	 * @param uuid the uuid of this form send record field
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the form send record field ID of this form send record field.
	 *
	 * @return the form send record field ID of this form send record field
	 */
	public long getFormSendRecordFieldId();

	/**
	 * Sets the form send record field ID of this form send record field.
	 *
	 * @param formSendRecordFieldId the form send record field ID of this form send record field
	 */
	public void setFormSendRecordFieldId(long formSendRecordFieldId);

	/**
	 * Returns the group ID of this form send record field.
	 *
	 * @return the group ID of this form send record field
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this form send record field.
	 *
	 * @param groupId the group ID of this form send record field
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this form send record field.
	 *
	 * @return the company ID of this form send record field
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this form send record field.
	 *
	 * @param companyId the company ID of this form send record field
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this form send record field.
	 *
	 * @return the user ID of this form send record field
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this form send record field.
	 *
	 * @param userId the user ID of this form send record field
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this form send record field.
	 *
	 * @return the user uuid of this form send record field
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this form send record field.
	 *
	 * @param userUuid the user uuid of this form send record field
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this form send record field.
	 *
	 * @return the user name of this form send record field
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this form send record field.
	 *
	 * @param userName the user name of this form send record field
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this form send record field.
	 *
	 * @return the create date of this form send record field
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this form send record field.
	 *
	 * @param createDate the create date of this form send record field
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this form send record field.
	 *
	 * @return the modified date of this form send record field
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this form send record field.
	 *
	 * @param modifiedDate the modified date of this form send record field
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this form send record field.
	 *
	 * @return the status of this form send record field
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this form send record field.
	 *
	 * @param status the status of this form send record field
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this form send record field.
	 *
	 * @return the status by user ID of this form send record field
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this form send record field.
	 *
	 * @param statusByUserId the status by user ID of this form send record field
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this form send record field.
	 *
	 * @return the status by user uuid of this form send record field
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this form send record field.
	 *
	 * @param statusByUserUuid the status by user uuid of this form send record field
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this form send record field.
	 *
	 * @return the status by user name of this form send record field
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this form send record field.
	 *
	 * @param statusByUserName the status by user name of this form send record field
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this form send record field.
	 *
	 * @return the status date of this form send record field
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this form send record field.
	 *
	 * @param statusDate the status date of this form send record field
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the response of this form send record field.
	 *
	 * @return the response of this form send record field
	 */
	public String getResponse();

	/**
	 * Returns the localized response of this form send record field in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized response of this form send record field
	 */
	@AutoEscape
	public String getResponse(Locale locale);

	/**
	 * Returns the localized response of this form send record field in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized response of this form send record field. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getResponse(Locale locale, boolean useDefault);

	/**
	 * Returns the localized response of this form send record field in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized response of this form send record field
	 */
	@AutoEscape
	public String getResponse(String languageId);

	/**
	 * Returns the localized response of this form send record field in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized response of this form send record field
	 */
	@AutoEscape
	public String getResponse(String languageId, boolean useDefault);

	@AutoEscape
	public String getResponseCurrentLanguageId();

	@AutoEscape
	public String getResponseCurrentValue();

	/**
	 * Returns a map of the locales and localized responses of this form send record field.
	 *
	 * @return the locales and localized responses of this form send record field
	 */
	public Map<Locale, String> getResponseMap();

	/**
	 * Sets the response of this form send record field.
	 *
	 * @param response the response of this form send record field
	 */
	public void setResponse(String response);

	/**
	 * Sets the localized response of this form send record field in the language.
	 *
	 * @param response the localized response of this form send record field
	 * @param locale the locale of the language
	 */
	public void setResponse(String response, Locale locale);

	/**
	 * Sets the localized response of this form send record field in the language, and sets the default locale.
	 *
	 * @param response the localized response of this form send record field
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setResponse(
		String response, Locale locale, Locale defaultLocale);

	public void setResponseCurrentLanguageId(String languageId);

	/**
	 * Sets the localized responses of this form send record field from the map of locales and localized responses.
	 *
	 * @param responseMap the locales and localized responses of this form send record field
	 */
	public void setResponseMap(Map<Locale, String> responseMap);

	/**
	 * Sets the localized responses of this form send record field from the map of locales and localized responses, and sets the default locale.
	 *
	 * @param responseMap the locales and localized responses of this form send record field
	 * @param defaultLocale the default locale
	 */
	public void setResponseMap(
		Map<Locale, String> responseMap, Locale defaultLocale);

	/**
	 * Returns the asset entry ID of this form send record field.
	 *
	 * @return the asset entry ID of this form send record field
	 */
	public long getAssetEntryId();

	/**
	 * Sets the asset entry ID of this form send record field.
	 *
	 * @param assetEntryId the asset entry ID of this form send record field
	 */
	public void setAssetEntryId(long assetEntryId);

	/**
	 * Returns the content ID of this form send record field.
	 *
	 * @return the content ID of this form send record field
	 */
	public long getContentId();

	/**
	 * Sets the content ID of this form send record field.
	 *
	 * @param contentId the content ID of this form send record field
	 */
	public void setContentId(long contentId);

	/**
	 * Returns the instance ID of this form send record field.
	 *
	 * @return the instance ID of this form send record field
	 */
	@AutoEscape
	public String getInstanceId();

	/**
	 * Sets the instance ID of this form send record field.
	 *
	 * @param instanceId the instance ID of this form send record field
	 */
	public void setInstanceId(String instanceId);

	/**
	 * Returns the response user ID of this form send record field.
	 *
	 * @return the response user ID of this form send record field
	 */
	public long getResponseUserId();

	/**
	 * Sets the response user ID of this form send record field.
	 *
	 * @param responseUserId the response user ID of this form send record field
	 */
	public void setResponseUserId(long responseUserId);

	/**
	 * Returns the response user uuid of this form send record field.
	 *
	 * @return the response user uuid of this form send record field
	 */
	public String getResponseUserUuid();

	/**
	 * Sets the response user uuid of this form send record field.
	 *
	 * @param responseUserUuid the response user uuid of this form send record field
	 */
	public void setResponseUserUuid(String responseUserUuid);

	/**
	 * Returns <code>true</code> if this form send record field is approved.
	 *
	 * @return <code>true</code> if this form send record field is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this form send record field is denied.
	 *
	 * @return <code>true</code> if this form send record field is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this form send record field is a draft.
	 *
	 * @return <code>true</code> if this form send record field is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this form send record field is expired.
	 *
	 * @return <code>true</code> if this form send record field is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this form send record field is inactive.
	 *
	 * @return <code>true</code> if this form send record field is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this form send record field is incomplete.
	 *
	 * @return <code>true</code> if this form send record field is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this form send record field is pending.
	 *
	 * @return <code>true</code> if this form send record field is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this form send record field is scheduled.
	 *
	 * @return <code>true</code> if this form send record field is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public FormSendRecordField cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}