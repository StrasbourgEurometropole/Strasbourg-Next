/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.place.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the ScheduleException service. Represents a row in the &quot;place_ScheduleException&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link eu.strasbourg.service.place.model.impl.ScheduleExceptionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link eu.strasbourg.service.place.model.impl.ScheduleExceptionImpl}.
 * </p>
 *
 * @author Angelique Zunino Champougny
 * @see ScheduleException
 * @see eu.strasbourg.service.place.model.impl.ScheduleExceptionImpl
 * @see eu.strasbourg.service.place.model.impl.ScheduleExceptionModelImpl
 * @generated
 */
@ProviderType
public interface ScheduleExceptionModel extends BaseModel<ScheduleException>,
	LocalizedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a schedule exception model instance should use the {@link ScheduleException} interface instead.
	 */

	/**
	 * Returns the primary key of this schedule exception.
	 *
	 * @return the primary key of this schedule exception
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this schedule exception.
	 *
	 * @param primaryKey the primary key of this schedule exception
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this schedule exception.
	 *
	 * @return the uuid of this schedule exception
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this schedule exception.
	 *
	 * @param uuid the uuid of this schedule exception
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the exception ID of this schedule exception.
	 *
	 * @return the exception ID of this schedule exception
	 */
	public long getExceptionId();

	/**
	 * Sets the exception ID of this schedule exception.
	 *
	 * @param exceptionId the exception ID of this schedule exception
	 */
	public void setExceptionId(long exceptionId);

	/**
	 * Returns the start date of this schedule exception.
	 *
	 * @return the start date of this schedule exception
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this schedule exception.
	 *
	 * @param startDate the start date of this schedule exception
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this schedule exception.
	 *
	 * @return the end date of this schedule exception
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this schedule exception.
	 *
	 * @param endDate the end date of this schedule exception
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the opening times of this schedule exception.
	 *
	 * @return the opening times of this schedule exception
	 */
	@AutoEscape
	public String getOpeningTimes();

	/**
	 * Sets the opening times of this schedule exception.
	 *
	 * @param openingTimes the opening times of this schedule exception
	 */
	public void setOpeningTimes(String openingTimes);

	/**
	 * Returns the comment of this schedule exception.
	 *
	 * @return the comment of this schedule exception
	 */
	public String getComment();

	/**
	 * Returns the localized comment of this schedule exception in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized comment of this schedule exception
	 */
	@AutoEscape
	public String getComment(Locale locale);

	/**
	 * Returns the localized comment of this schedule exception in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized comment of this schedule exception. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getComment(Locale locale, boolean useDefault);

	/**
	 * Returns the localized comment of this schedule exception in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized comment of this schedule exception
	 */
	@AutoEscape
	public String getComment(String languageId);

	/**
	 * Returns the localized comment of this schedule exception in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized comment of this schedule exception
	 */
	@AutoEscape
	public String getComment(String languageId, boolean useDefault);

	@AutoEscape
	public String getCommentCurrentLanguageId();

	@AutoEscape
	public String getCommentCurrentValue();

	/**
	 * Returns a map of the locales and localized comments of this schedule exception.
	 *
	 * @return the locales and localized comments of this schedule exception
	 */
	public Map<Locale, String> getCommentMap();

	/**
	 * Sets the comment of this schedule exception.
	 *
	 * @param comment the comment of this schedule exception
	 */
	public void setComment(String comment);

	/**
	 * Sets the localized comment of this schedule exception in the language.
	 *
	 * @param comment the localized comment of this schedule exception
	 * @param locale the locale of the language
	 */
	public void setComment(String comment, Locale locale);

	/**
	 * Sets the localized comment of this schedule exception in the language, and sets the default locale.
	 *
	 * @param comment the localized comment of this schedule exception
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setComment(String comment, Locale locale, Locale defaultLocale);

	public void setCommentCurrentLanguageId(String languageId);

	/**
	 * Sets the localized comments of this schedule exception from the map of locales and localized comments.
	 *
	 * @param commentMap the locales and localized comments of this schedule exception
	 */
	public void setCommentMap(Map<Locale, String> commentMap);

	/**
	 * Sets the localized comments of this schedule exception from the map of locales and localized comments, and sets the default locale.
	 *
	 * @param commentMap the locales and localized comments of this schedule exception
	 * @param defaultLocale the default locale
	 */
	public void setCommentMap(Map<Locale, String> commentMap,
		Locale defaultLocale);

	/**
	 * Returns the closed of this schedule exception.
	 *
	 * @return the closed of this schedule exception
	 */
	public boolean getClosed();

	/**
	 * Returns <code>true</code> if this schedule exception is closed.
	 *
	 * @return <code>true</code> if this schedule exception is closed; <code>false</code> otherwise
	 */
	public boolean isClosed();

	/**
	 * Sets whether this schedule exception is closed.
	 *
	 * @param closed the closed of this schedule exception
	 */
	public void setClosed(boolean closed);

	/**
	 * Returns the place ID of this schedule exception.
	 *
	 * @return the place ID of this schedule exception
	 */
	public long getPlaceId();

	/**
	 * Sets the place ID of this schedule exception.
	 *
	 * @param placeId the place ID of this schedule exception
	 */
	public void setPlaceId(long placeId);

	/**
	 * Returns the sub place ID of this schedule exception.
	 *
	 * @return the sub place ID of this schedule exception
	 */
	public long getSubPlaceId();

	/**
	 * Sets the sub place ID of this schedule exception.
	 *
	 * @param subPlaceId the sub place ID of this schedule exception
	 */
	public void setSubPlaceId(long subPlaceId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(
		eu.strasbourg.service.place.model.ScheduleException scheduleException);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.place.model.ScheduleException> toCacheModel();

	@Override
	public eu.strasbourg.service.place.model.ScheduleException toEscapedModel();

	@Override
	public eu.strasbourg.service.place.model.ScheduleException toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}