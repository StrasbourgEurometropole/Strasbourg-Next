/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.place.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CsmapCacheJson service. Represents a row in the &quot;place_CsmapCacheJson&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.place.model.impl.CsmapCacheJsonModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.place.model.impl.CsmapCacheJsonImpl</code>.
 * </p>
 *
 * @author Angelique Zunino Champougny
 * @see CsmapCacheJson
 * @generated
 */
@ProviderType
public interface CsmapCacheJsonModel extends BaseModel<CsmapCacheJson> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a csmap cache json model instance should use the {@link CsmapCacheJson} interface instead.
	 */

	/**
	 * Returns the primary key of this csmap cache json.
	 *
	 * @return the primary key of this csmap cache json
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this csmap cache json.
	 *
	 * @param primaryKey the primary key of this csmap cache json
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the uuid of this csmap cache json.
	 *
	 * @return the uuid of this csmap cache json
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this csmap cache json.
	 *
	 * @param uuid the uuid of this csmap cache json
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the sig ID of this csmap cache json.
	 *
	 * @return the sig ID of this csmap cache json
	 */
	@AutoEscape
	public String getSigId();

	/**
	 * Sets the sig ID of this csmap cache json.
	 *
	 * @param sigId the sig ID of this csmap cache json
	 */
	public void setSigId(String sigId);

	/**
	 * Returns the json lieu of this csmap cache json.
	 *
	 * @return the json lieu of this csmap cache json
	 */
	@AutoEscape
	public String getJsonLieu();

	/**
	 * Sets the json lieu of this csmap cache json.
	 *
	 * @param jsonLieu the json lieu of this csmap cache json
	 */
	public void setJsonLieu(String jsonLieu);

	/**
	 * Returns the json horaire of this csmap cache json.
	 *
	 * @return the json horaire of this csmap cache json
	 */
	@AutoEscape
	public String getJsonHoraire();

	/**
	 * Sets the json horaire of this csmap cache json.
	 *
	 * @param jsonHoraire the json horaire of this csmap cache json
	 */
	public void setJsonHoraire(String jsonHoraire);

	/**
	 * Returns the create place of this csmap cache json.
	 *
	 * @return the create place of this csmap cache json
	 */
	public Date getCreatePlace();

	/**
	 * Sets the create place of this csmap cache json.
	 *
	 * @param createPlace the create place of this csmap cache json
	 */
	public void setCreatePlace(Date createPlace);

	/**
	 * Returns the modified place of this csmap cache json.
	 *
	 * @return the modified place of this csmap cache json
	 */
	public Date getModifiedPlace();

	/**
	 * Sets the modified place of this csmap cache json.
	 *
	 * @param modifiedPlace the modified place of this csmap cache json
	 */
	public void setModifiedPlace(Date modifiedPlace);

	/**
	 * Returns the is active of this csmap cache json.
	 *
	 * @return the is active of this csmap cache json
	 */
	public boolean getIsActive();

	/**
	 * Returns <code>true</code> if this csmap cache json is is active.
	 *
	 * @return <code>true</code> if this csmap cache json is is active; <code>false</code> otherwise
	 */
	public boolean isIsActive();

	/**
	 * Sets whether this csmap cache json is is active.
	 *
	 * @param isActive the is active of this csmap cache json
	 */
	public void setIsActive(boolean isActive);

	@Override
	public CsmapCacheJson cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}