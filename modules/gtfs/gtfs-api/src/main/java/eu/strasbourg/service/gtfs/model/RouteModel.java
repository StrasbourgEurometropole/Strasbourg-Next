/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.gtfs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Route service. Represents a row in the &quot;gtfs_Route&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link eu.strasbourg.service.gtfs.model.impl.RouteModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link eu.strasbourg.service.gtfs.model.impl.RouteImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see Route
 * @see eu.strasbourg.service.gtfs.model.impl.RouteImpl
 * @see eu.strasbourg.service.gtfs.model.impl.RouteModelImpl
 * @generated
 */
@ProviderType
public interface RouteModel extends BaseModel<Route> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a route model instance should use the {@link Route} interface instead.
	 */

	/**
	 * Returns the primary key of this route.
	 *
	 * @return the primary key of this route
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this route.
	 *
	 * @param primaryKey the primary key of this route
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this route.
	 *
	 * @return the uuid of this route
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this route.
	 *
	 * @param uuid the uuid of this route
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this route.
	 *
	 * @return the ID of this route
	 */
	public long getId();

	/**
	 * Sets the ID of this route.
	 *
	 * @param id the ID of this route
	 */
	public void setId(long id);

	/**
	 * Returns the route_id of this route.
	 *
	 * @return the route_id of this route
	 */
	@AutoEscape
	public String getRoute_id();

	/**
	 * Sets the route_id of this route.
	 *
	 * @param route_id the route_id of this route
	 */
	public void setRoute_id(String route_id);

	/**
	 * Returns the route_short_name of this route.
	 *
	 * @return the route_short_name of this route
	 */
	@AutoEscape
	public String getRoute_short_name();

	/**
	 * Sets the route_short_name of this route.
	 *
	 * @param route_short_name the route_short_name of this route
	 */
	public void setRoute_short_name(String route_short_name);

	/**
	 * Returns the route_long_name of this route.
	 *
	 * @return the route_long_name of this route
	 */
	@AutoEscape
	public String getRoute_long_name();

	/**
	 * Sets the route_long_name of this route.
	 *
	 * @param route_long_name the route_long_name of this route
	 */
	public void setRoute_long_name(String route_long_name);

	/**
	 * Returns the route_desc of this route.
	 *
	 * @return the route_desc of this route
	 */
	@AutoEscape
	public String getRoute_desc();

	/**
	 * Sets the route_desc of this route.
	 *
	 * @param route_desc the route_desc of this route
	 */
	public void setRoute_desc(String route_desc);

	/**
	 * Returns the route_type of this route.
	 *
	 * @return the route_type of this route
	 */
	public int getRoute_type();

	/**
	 * Sets the route_type of this route.
	 *
	 * @param route_type the route_type of this route
	 */
	public void setRoute_type(int route_type);

	/**
	 * Returns the route_color of this route.
	 *
	 * @return the route_color of this route
	 */
	@AutoEscape
	public String getRoute_color();

	/**
	 * Sets the route_color of this route.
	 *
	 * @param route_color the route_color of this route
	 */
	public void setRoute_color(String route_color);

	/**
	 * Returns the route_text_color of this route.
	 *
	 * @return the route_text_color of this route
	 */
	@AutoEscape
	public String getRoute_text_color();

	/**
	 * Sets the route_text_color of this route.
	 *
	 * @param route_text_color the route_text_color of this route
	 */
	public void setRoute_text_color(String route_text_color);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(eu.strasbourg.service.gtfs.model.Route route);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.gtfs.model.Route> toCacheModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Route toEscapedModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Route toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}