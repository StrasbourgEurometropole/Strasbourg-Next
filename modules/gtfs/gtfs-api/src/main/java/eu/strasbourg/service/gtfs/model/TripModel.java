/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.gtfs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Trip service. Represents a row in the &quot;gtfs_Trip&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.gtfs.model.impl.TripModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.gtfs.model.impl.TripImpl</code>.
 * </p>
 *
 * @author Cedric Henry
 * @see Trip
 * @generated
 */
@ProviderType
public interface TripModel extends BaseModel<Trip> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a trip model instance should use the {@link Trip} interface instead.
	 */

	/**
	 * Returns the primary key of this trip.
	 *
	 * @return the primary key of this trip
	 */
	public String getPrimaryKey();

	/**
	 * Sets the primary key of this trip.
	 *
	 * @param primaryKey the primary key of this trip
	 */
	public void setPrimaryKey(String primaryKey);

	/**
	 * Returns the route_id of this trip.
	 *
	 * @return the route_id of this trip
	 */
	@AutoEscape
	public String getRoute_id();

	/**
	 * Sets the route_id of this trip.
	 *
	 * @param route_id the route_id of this trip
	 */
	public void setRoute_id(String route_id);

	/**
	 * Returns the service_id of this trip.
	 *
	 * @return the service_id of this trip
	 */
	@AutoEscape
	public String getService_id();

	/**
	 * Sets the service_id of this trip.
	 *
	 * @param service_id the service_id of this trip
	 */
	public void setService_id(String service_id);

	/**
	 * Returns the trip_id of this trip.
	 *
	 * @return the trip_id of this trip
	 */
	@AutoEscape
	public String getTrip_id();

	/**
	 * Sets the trip_id of this trip.
	 *
	 * @param trip_id the trip_id of this trip
	 */
	public void setTrip_id(String trip_id);

	/**
	 * Returns the trip_headsign of this trip.
	 *
	 * @return the trip_headsign of this trip
	 */
	@AutoEscape
	public String getTrip_headsign();

	/**
	 * Sets the trip_headsign of this trip.
	 *
	 * @param trip_headsign the trip_headsign of this trip
	 */
	public void setTrip_headsign(String trip_headsign);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(eu.strasbourg.service.gtfs.model.Trip trip);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.gtfs.model.Trip> toCacheModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Trip toEscapedModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Trip toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();

}