/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.gtfs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Direction service. Represents a row in the &quot;gtfs_Direction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link eu.strasbourg.service.gtfs.model.impl.DirectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link eu.strasbourg.service.gtfs.model.impl.DirectionImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see Direction
 * @see eu.strasbourg.service.gtfs.model.impl.DirectionImpl
 * @see eu.strasbourg.service.gtfs.model.impl.DirectionModelImpl
 * @generated
 */
@ProviderType
public interface DirectionModel extends BaseModel<Direction>, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a direction model instance should use the {@link Direction} interface instead.
	 */

	/**
	 * Returns the primary key of this direction.
	 *
	 * @return the primary key of this direction
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this direction.
	 *
	 * @param primaryKey the primary key of this direction
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this direction.
	 *
	 * @return the uuid of this direction
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this direction.
	 *
	 * @param uuid the uuid of this direction
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the direction ID of this direction.
	 *
	 * @return the direction ID of this direction
	 */
	public long getDirectionId();

	/**
	 * Sets the direction ID of this direction.
	 *
	 * @param directionId the direction ID of this direction
	 */
	public void setDirectionId(long directionId);

	/**
	 * Returns the group ID of this direction.
	 *
	 * @return the group ID of this direction
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this direction.
	 *
	 * @param groupId the group ID of this direction
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this direction.
	 *
	 * @return the company ID of this direction
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this direction.
	 *
	 * @param companyId the company ID of this direction
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the stop ID of this direction.
	 *
	 * @return the stop ID of this direction
	 */
	@AutoEscape
	public String getStopId();

	/**
	 * Sets the stop ID of this direction.
	 *
	 * @param stopId the stop ID of this direction
	 */
	public void setStopId(String stopId);

	/**
	 * Returns the route ID of this direction.
	 *
	 * @return the route ID of this direction
	 */
	@AutoEscape
	public String getRouteId();

	/**
	 * Sets the route ID of this direction.
	 *
	 * @param routeId the route ID of this direction
	 */
	public void setRouteId(String routeId);

	/**
	 * Returns the destination name of this direction.
	 *
	 * @return the destination name of this direction
	 */
	@AutoEscape
	public String getDestinationName();

	/**
	 * Sets the destination name of this direction.
	 *
	 * @param destinationName the destination name of this direction
	 */
	public void setDestinationName(String destinationName);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(eu.strasbourg.service.gtfs.model.Direction direction);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.gtfs.model.Direction> toCacheModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Direction toEscapedModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Direction toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}