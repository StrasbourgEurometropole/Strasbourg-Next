/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.gtfs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Calendar service. Represents a row in the &quot;gtfs_Calendar&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link eu.strasbourg.service.gtfs.model.impl.CalendarModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link eu.strasbourg.service.gtfs.model.impl.CalendarImpl}.
 * </p>
 *
 * @author Cedric Henry
 * @see Calendar
 * @see eu.strasbourg.service.gtfs.model.impl.CalendarImpl
 * @see eu.strasbourg.service.gtfs.model.impl.CalendarModelImpl
 * @generated
 */
@ProviderType
public interface CalendarModel extends BaseModel<Calendar> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a calendar model instance should use the {@link Calendar} interface instead.
	 */

	/**
	 * Returns the primary key of this calendar.
	 *
	 * @return the primary key of this calendar
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this calendar.
	 *
	 * @param primaryKey the primary key of this calendar
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this calendar.
	 *
	 * @return the uuid of this calendar
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this calendar.
	 *
	 * @param uuid the uuid of this calendar
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this calendar.
	 *
	 * @return the ID of this calendar
	 */
	public long getId();

	/**
	 * Sets the ID of this calendar.
	 *
	 * @param id the ID of this calendar
	 */
	public void setId(long id);

	/**
	 * Returns the service_id of this calendar.
	 *
	 * @return the service_id of this calendar
	 */
	@AutoEscape
	public String getService_id();

	/**
	 * Sets the service_id of this calendar.
	 *
	 * @param service_id the service_id of this calendar
	 */
	public void setService_id(String service_id);

	/**
	 * Returns the monday of this calendar.
	 *
	 * @return the monday of this calendar
	 */
	public boolean getMonday();

	/**
	 * Returns <code>true</code> if this calendar is monday.
	 *
	 * @return <code>true</code> if this calendar is monday; <code>false</code> otherwise
	 */
	public boolean isMonday();

	/**
	 * Sets whether this calendar is monday.
	 *
	 * @param monday the monday of this calendar
	 */
	public void setMonday(boolean monday);

	/**
	 * Returns the tuesday of this calendar.
	 *
	 * @return the tuesday of this calendar
	 */
	public boolean getTuesday();

	/**
	 * Returns <code>true</code> if this calendar is tuesday.
	 *
	 * @return <code>true</code> if this calendar is tuesday; <code>false</code> otherwise
	 */
	public boolean isTuesday();

	/**
	 * Sets whether this calendar is tuesday.
	 *
	 * @param tuesday the tuesday of this calendar
	 */
	public void setTuesday(boolean tuesday);

	/**
	 * Returns the wednesday of this calendar.
	 *
	 * @return the wednesday of this calendar
	 */
	public boolean getWednesday();

	/**
	 * Returns <code>true</code> if this calendar is wednesday.
	 *
	 * @return <code>true</code> if this calendar is wednesday; <code>false</code> otherwise
	 */
	public boolean isWednesday();

	/**
	 * Sets whether this calendar is wednesday.
	 *
	 * @param wednesday the wednesday of this calendar
	 */
	public void setWednesday(boolean wednesday);

	/**
	 * Returns the thursday of this calendar.
	 *
	 * @return the thursday of this calendar
	 */
	public boolean getThursday();

	/**
	 * Returns <code>true</code> if this calendar is thursday.
	 *
	 * @return <code>true</code> if this calendar is thursday; <code>false</code> otherwise
	 */
	public boolean isThursday();

	/**
	 * Sets whether this calendar is thursday.
	 *
	 * @param thursday the thursday of this calendar
	 */
	public void setThursday(boolean thursday);

	/**
	 * Returns the friday of this calendar.
	 *
	 * @return the friday of this calendar
	 */
	public boolean getFriday();

	/**
	 * Returns <code>true</code> if this calendar is friday.
	 *
	 * @return <code>true</code> if this calendar is friday; <code>false</code> otherwise
	 */
	public boolean isFriday();

	/**
	 * Sets whether this calendar is friday.
	 *
	 * @param friday the friday of this calendar
	 */
	public void setFriday(boolean friday);

	/**
	 * Returns the saturday of this calendar.
	 *
	 * @return the saturday of this calendar
	 */
	public boolean getSaturday();

	/**
	 * Returns <code>true</code> if this calendar is saturday.
	 *
	 * @return <code>true</code> if this calendar is saturday; <code>false</code> otherwise
	 */
	public boolean isSaturday();

	/**
	 * Sets whether this calendar is saturday.
	 *
	 * @param saturday the saturday of this calendar
	 */
	public void setSaturday(boolean saturday);

	/**
	 * Returns the sunday of this calendar.
	 *
	 * @return the sunday of this calendar
	 */
	public boolean getSunday();

	/**
	 * Returns <code>true</code> if this calendar is sunday.
	 *
	 * @return <code>true</code> if this calendar is sunday; <code>false</code> otherwise
	 */
	public boolean isSunday();

	/**
	 * Sets whether this calendar is sunday.
	 *
	 * @param sunday the sunday of this calendar
	 */
	public void setSunday(boolean sunday);

	/**
	 * Returns the start_date of this calendar.
	 *
	 * @return the start_date of this calendar
	 */
	public Date getStart_date();

	/**
	 * Sets the start_date of this calendar.
	 *
	 * @param start_date the start_date of this calendar
	 */
	public void setStart_date(Date start_date);

	/**
	 * Returns the end_date of this calendar.
	 *
	 * @return the end_date of this calendar
	 */
	public Date getEnd_date();

	/**
	 * Sets the end_date of this calendar.
	 *
	 * @param end_date the end_date of this calendar
	 */
	public void setEnd_date(Date end_date);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(eu.strasbourg.service.gtfs.model.Calendar calendar);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.gtfs.model.Calendar> toCacheModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Calendar toEscapedModel();

	@Override
	public eu.strasbourg.service.gtfs.model.Calendar toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}