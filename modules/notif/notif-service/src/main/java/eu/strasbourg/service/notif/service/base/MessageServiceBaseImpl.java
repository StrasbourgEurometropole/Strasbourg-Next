/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.notif.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import eu.strasbourg.service.notif.model.Message;
import eu.strasbourg.service.notif.service.MessageService;
import eu.strasbourg.service.notif.service.persistence.MessagePersistence;
import eu.strasbourg.service.notif.service.persistence.NatureNotifPersistence;
import eu.strasbourg.service.notif.service.persistence.NotificationPersistence;
import eu.strasbourg.service.notif.service.persistence.ServiceNotifPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the message remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link eu.strasbourg.service.notif.service.impl.MessageServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see eu.strasbourg.service.notif.service.impl.MessageServiceImpl
 * @generated
 */
public abstract class MessageServiceBaseImpl
	extends BaseServiceImpl implements MessageService, IdentifiableOSGiService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>MessageService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>eu.strasbourg.service.notif.service.MessageServiceUtil</code>.
	 */

	/**
	 * Returns the message local service.
	 *
	 * @return the message local service
	 */
	public eu.strasbourg.service.notif.service.MessageLocalService
		getMessageLocalService() {

		return messageLocalService;
	}

	/**
	 * Sets the message local service.
	 *
	 * @param messageLocalService the message local service
	 */
	public void setMessageLocalService(
		eu.strasbourg.service.notif.service.MessageLocalService
			messageLocalService) {

		this.messageLocalService = messageLocalService;
	}

	/**
	 * Returns the message remote service.
	 *
	 * @return the message remote service
	 */
	public MessageService getMessageService() {
		return messageService;
	}

	/**
	 * Sets the message remote service.
	 *
	 * @param messageService the message remote service
	 */
	public void setMessageService(MessageService messageService) {
		this.messageService = messageService;
	}

	/**
	 * Returns the message persistence.
	 *
	 * @return the message persistence
	 */
	public MessagePersistence getMessagePersistence() {
		return messagePersistence;
	}

	/**
	 * Sets the message persistence.
	 *
	 * @param messagePersistence the message persistence
	 */
	public void setMessagePersistence(MessagePersistence messagePersistence) {
		this.messagePersistence = messagePersistence;
	}

	/**
	 * Returns the nature notif local service.
	 *
	 * @return the nature notif local service
	 */
	public eu.strasbourg.service.notif.service.NatureNotifLocalService
		getNatureNotifLocalService() {

		return natureNotifLocalService;
	}

	/**
	 * Sets the nature notif local service.
	 *
	 * @param natureNotifLocalService the nature notif local service
	 */
	public void setNatureNotifLocalService(
		eu.strasbourg.service.notif.service.NatureNotifLocalService
			natureNotifLocalService) {

		this.natureNotifLocalService = natureNotifLocalService;
	}

	/**
	 * Returns the nature notif remote service.
	 *
	 * @return the nature notif remote service
	 */
	public eu.strasbourg.service.notif.service.NatureNotifService
		getNatureNotifService() {

		return natureNotifService;
	}

	/**
	 * Sets the nature notif remote service.
	 *
	 * @param natureNotifService the nature notif remote service
	 */
	public void setNatureNotifService(
		eu.strasbourg.service.notif.service.NatureNotifService
			natureNotifService) {

		this.natureNotifService = natureNotifService;
	}

	/**
	 * Returns the nature notif persistence.
	 *
	 * @return the nature notif persistence
	 */
	public NatureNotifPersistence getNatureNotifPersistence() {
		return natureNotifPersistence;
	}

	/**
	 * Sets the nature notif persistence.
	 *
	 * @param natureNotifPersistence the nature notif persistence
	 */
	public void setNatureNotifPersistence(
		NatureNotifPersistence natureNotifPersistence) {

		this.natureNotifPersistence = natureNotifPersistence;
	}

	/**
	 * Returns the notification local service.
	 *
	 * @return the notification local service
	 */
	public eu.strasbourg.service.notif.service.NotificationLocalService
		getNotificationLocalService() {

		return notificationLocalService;
	}

	/**
	 * Sets the notification local service.
	 *
	 * @param notificationLocalService the notification local service
	 */
	public void setNotificationLocalService(
		eu.strasbourg.service.notif.service.NotificationLocalService
			notificationLocalService) {

		this.notificationLocalService = notificationLocalService;
	}

	/**
	 * Returns the notification remote service.
	 *
	 * @return the notification remote service
	 */
	public eu.strasbourg.service.notif.service.NotificationService
		getNotificationService() {

		return notificationService;
	}

	/**
	 * Sets the notification remote service.
	 *
	 * @param notificationService the notification remote service
	 */
	public void setNotificationService(
		eu.strasbourg.service.notif.service.NotificationService
			notificationService) {

		this.notificationService = notificationService;
	}

	/**
	 * Returns the notification persistence.
	 *
	 * @return the notification persistence
	 */
	public NotificationPersistence getNotificationPersistence() {
		return notificationPersistence;
	}

	/**
	 * Sets the notification persistence.
	 *
	 * @param notificationPersistence the notification persistence
	 */
	public void setNotificationPersistence(
		NotificationPersistence notificationPersistence) {

		this.notificationPersistence = notificationPersistence;
	}

	/**
	 * Returns the service notif local service.
	 *
	 * @return the service notif local service
	 */
	public eu.strasbourg.service.notif.service.ServiceNotifLocalService
		getServiceNotifLocalService() {

		return serviceNotifLocalService;
	}

	/**
	 * Sets the service notif local service.
	 *
	 * @param serviceNotifLocalService the service notif local service
	 */
	public void setServiceNotifLocalService(
		eu.strasbourg.service.notif.service.ServiceNotifLocalService
			serviceNotifLocalService) {

		this.serviceNotifLocalService = serviceNotifLocalService;
	}

	/**
	 * Returns the service notif remote service.
	 *
	 * @return the service notif remote service
	 */
	public eu.strasbourg.service.notif.service.ServiceNotifService
		getServiceNotifService() {

		return serviceNotifService;
	}

	/**
	 * Sets the service notif remote service.
	 *
	 * @param serviceNotifService the service notif remote service
	 */
	public void setServiceNotifService(
		eu.strasbourg.service.notif.service.ServiceNotifService
			serviceNotifService) {

		this.serviceNotifService = serviceNotifService;
	}

	/**
	 * Returns the service notif persistence.
	 *
	 * @return the service notif persistence
	 */
	public ServiceNotifPersistence getServiceNotifPersistence() {
		return serviceNotifPersistence;
	}

	/**
	 * Sets the service notif persistence.
	 *
	 * @param serviceNotifPersistence the service notif persistence
	 */
	public void setServiceNotifPersistence(
		ServiceNotifPersistence serviceNotifPersistence) {

		this.serviceNotifPersistence = serviceNotifPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService
		getClassNameLocalService() {

		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService
			classNameLocalService) {

		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService
		getClassNameService() {

		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {

		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {

		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService
		getResourceLocalService() {

		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService
			resourceLocalService) {

		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService
		getUserLocalService() {

		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {

		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {

		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return MessageService.class.getName();
	}

	protected Class<?> getModelClass() {
		return Message.class;
	}

	protected String getModelClassName() {
		return Message.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = messagePersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(
		type = eu.strasbourg.service.notif.service.MessageLocalService.class
	)
	protected eu.strasbourg.service.notif.service.MessageLocalService
		messageLocalService;

	@BeanReference(type = MessageService.class)
	protected MessageService messageService;

	@BeanReference(type = MessagePersistence.class)
	protected MessagePersistence messagePersistence;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.NatureNotifLocalService.class
	)
	protected eu.strasbourg.service.notif.service.NatureNotifLocalService
		natureNotifLocalService;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.NatureNotifService.class
	)
	protected eu.strasbourg.service.notif.service.NatureNotifService
		natureNotifService;

	@BeanReference(type = NatureNotifPersistence.class)
	protected NatureNotifPersistence natureNotifPersistence;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.NotificationLocalService.class
	)
	protected eu.strasbourg.service.notif.service.NotificationLocalService
		notificationLocalService;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.NotificationService.class
	)
	protected eu.strasbourg.service.notif.service.NotificationService
		notificationService;

	@BeanReference(type = NotificationPersistence.class)
	protected NotificationPersistence notificationPersistence;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.ServiceNotifLocalService.class
	)
	protected eu.strasbourg.service.notif.service.ServiceNotifLocalService
		serviceNotifLocalService;

	@BeanReference(
		type = eu.strasbourg.service.notif.service.ServiceNotifService.class
	)
	protected eu.strasbourg.service.notif.service.ServiceNotifService
		serviceNotifService;

	@BeanReference(type = ServiceNotifPersistence.class)
	protected ServiceNotifPersistence serviceNotifPersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameLocalService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameLocalService
		classNameLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ClassNameService.class
	)
	protected com.liferay.portal.kernel.service.ClassNameService
		classNameService;

	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.ResourceLocalService.class
	)
	protected com.liferay.portal.kernel.service.ResourceLocalService
		resourceLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserLocalService.class
	)
	protected com.liferay.portal.kernel.service.UserLocalService
		userLocalService;

	@ServiceReference(
		type = com.liferay.portal.kernel.service.UserService.class
	)
	protected com.liferay.portal.kernel.service.UserService userService;

	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;

}