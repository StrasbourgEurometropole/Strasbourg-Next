/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.tipi.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the TipiEntry service. Represents a row in the &quot;tipi_TipiEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.tipi.model.impl.TipiEntryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.tipi.model.impl.TipiEntryImpl</code>.
 * </p>
 *
 * @author Angelique Zunino Champougny
 * @see TipiEntry
 * @generated
 */
@ProviderType
public interface TipiEntryModel extends BaseModel<TipiEntry> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a tipi entry model instance should use the {@link TipiEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this tipi entry.
	 *
	 * @return the primary key of this tipi entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this tipi entry.
	 *
	 * @param primaryKey the primary key of this tipi entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this tipi entry.
	 *
	 * @return the uuid of this tipi entry
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this tipi entry.
	 *
	 * @param uuid the uuid of this tipi entry
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this tipi entry.
	 *
	 * @return the ID of this tipi entry
	 */
	public long getId();

	/**
	 * Sets the ID of this tipi entry.
	 *
	 * @param id the ID of this tipi entry
	 */
	public void setId(long id);

	/**
	 * Returns the date of this tipi entry.
	 *
	 * @return the date of this tipi entry
	 */
	public Date getDate();

	/**
	 * Sets the date of this tipi entry.
	 *
	 * @param date the date of this tipi entry
	 */
	public void setDate(Date date);

	/**
	 * Returns the total of this tipi entry.
	 *
	 * @return the total of this tipi entry
	 */
	public int getTotal();

	/**
	 * Sets the total of this tipi entry.
	 *
	 * @param total the total of this tipi entry
	 */
	public void setTotal(int total);

	/**
	 * Returns the paid count of this tipi entry.
	 *
	 * @return the paid count of this tipi entry
	 */
	public int getPaidCount();

	/**
	 * Sets the paid count of this tipi entry.
	 *
	 * @param paidCount the paid count of this tipi entry
	 */
	public void setPaidCount(int paidCount);

	/**
	 * Returns the refused count of this tipi entry.
	 *
	 * @return the refused count of this tipi entry
	 */
	public int getRefusedCount();

	/**
	 * Sets the refused count of this tipi entry.
	 *
	 * @param refusedCount the refused count of this tipi entry
	 */
	public void setRefusedCount(int refusedCount);

	/**
	 * Returns the canceled count of this tipi entry.
	 *
	 * @return the canceled count of this tipi entry
	 */
	public int getCanceledCount();

	/**
	 * Sets the canceled count of this tipi entry.
	 *
	 * @param canceledCount the canceled count of this tipi entry
	 */
	public void setCanceledCount(int canceledCount);

	/**
	 * Returns the type of this tipi entry.
	 *
	 * @return the type of this tipi entry
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this tipi entry.
	 *
	 * @param type the type of this tipi entry
	 */
	public void setType(String type);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(eu.strasbourg.service.tipi.model.TipiEntry tipiEntry);

	@Override
	public int hashCode();

	@Override
	public CacheModel<eu.strasbourg.service.tipi.model.TipiEntry>
		toCacheModel();

	@Override
	public eu.strasbourg.service.tipi.model.TipiEntry toEscapedModel();

	@Override
	public eu.strasbourg.service.tipi.model.TipiEntry toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();

}