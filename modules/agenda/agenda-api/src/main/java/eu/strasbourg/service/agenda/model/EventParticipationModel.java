/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package eu.strasbourg.service.agenda.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EventParticipation service. Represents a row in the &quot;agenda_EventParticipation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>eu.strasbourg.service.agenda.model.impl.EventParticipationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>eu.strasbourg.service.agenda.model.impl.EventParticipationImpl</code>.
 * </p>
 *
 * @author BenjaminBini
 * @see EventParticipation
 * @generated
 */
@ProviderType
public interface EventParticipationModel extends BaseModel<EventParticipation> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a event participation model instance should use the {@link EventParticipation} interface instead.
	 */

	/**
	 * Returns the primary key of this event participation.
	 *
	 * @return the primary key of this event participation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this event participation.
	 *
	 * @param primaryKey the primary key of this event participation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the event participation ID of this event participation.
	 *
	 * @return the event participation ID of this event participation
	 */
	public long getEventParticipationId();

	/**
	 * Sets the event participation ID of this event participation.
	 *
	 * @param eventParticipationId the event participation ID of this event participation
	 */
	public void setEventParticipationId(long eventParticipationId);

	/**
	 * Returns the create date of this event participation.
	 *
	 * @return the create date of this event participation
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this event participation.
	 *
	 * @param createDate the create date of this event participation
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the publik user ID of this event participation.
	 *
	 * @return the publik user ID of this event participation
	 */
	@AutoEscape
	public String getPublikUserId();

	/**
	 * Sets the publik user ID of this event participation.
	 *
	 * @param publikUserId the publik user ID of this event participation
	 */
	public void setPublikUserId(String publikUserId);

	/**
	 * Returns the event ID of this event participation.
	 *
	 * @return the event ID of this event participation
	 */
	public long getEventId();

	/**
	 * Sets the event ID of this event participation.
	 *
	 * @param eventId the event ID of this event participation
	 */
	public void setEventId(long eventId);

	/**
	 * Returns the group ID of this event participation.
	 *
	 * @return the group ID of this event participation
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this event participation.
	 *
	 * @param groupId the group ID of this event participation
	 */
	public void setGroupId(long groupId);

	@Override
	public EventParticipation cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}