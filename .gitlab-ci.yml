stages:
  - build
  - docker_build
  - deploy_recette
  - test

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  COMMIT_MESSAGE: "skip-build"

.base_ssh: &base_ssh
    - 'which ssh-agent || ( apk update && apk add openssh)'
    - eval $(ssh-agent -s)
    - cat "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no" > ~/.ssh/config'

theme_build:
  image: azul/zulu-openjdk:11.0.24-jdk
  stage: build
  cache:
    key:
      files:
          - gradle/wrapper/gradle-wrapper.properties
    paths:
      - yarn.lock
      - "**/node_modules_cache/"
      - "**/node_modules/"
      - cache/caches/
      - cache/notifications/
      - cache/wrapper/
  script:
    - bash ./gradlew --build-cache --gradle-user-home cache/ -p themes dockerDeploy
  artifacts:
    paths:
      - "build/docker/*"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


# Gradle build stage
modules_build:
  image: azul/zulu-openjdk:11.0.24-jdk
  stage: build
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - cache/caches/
      - cache/notifications/
      - cache/wrapper/
  script:
    - bash ./gradlew --build-cache --gradle-user-home cache/ -p modules dockerDeploy
  artifacts:
    paths:
      - "build/docker/*"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /.*$COMMIT_MESSAGE.*/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


# Gradle build stage
war_build:
  image: azul/zulu-openjdk:11.0.24-jdk
  stage: build
  cache:
    key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
    paths:
      - cache/caches/
      - cache/notifications/
      - cache/wrapper/
  script:
    - bash ./gradlew --build-cache --gradle-user-home cache/ -p wars dockerDeploy
  artifacts:
    paths:
      - "build/docker/*"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /.*$COMMIT_MESSAGE.*/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


fragment_build:
  image: node:16.13.0
  stage: build
  script:
    - mkdir -p build/docker/deploy
    - apt update && apt install expect -y
    - cd fragments/strasbourg-fragments && npm i && npm i yo
    - expect build_fragment.exp
    - mv ./build/liferay-fragments.zip ../../build/docker/deploy/liferay-fragments-strasbourg-eu.zip
  artifacts:
    paths:
      - "build/docker/*"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /.*$COMMIT_MESSAGE.*/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'



  

# Docker build stage
docker_build_recette:
  stage: docker_build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
  script:
    - apk add --no-cache tree
    - tree build/
    - docker build -t $HARBOR_REPO_URL:recette .
    - docker build -t $HARBOR_REPO_URL-es:latest . -f es.Dockerfile
    - echo $HARBOR_PASSWORD | docker login $HARBOR_URL -u $HARBOR_USERNAME --password-stdin 
    - docker push $HARBOR_REPO_URL:recette
    - docker push $HARBOR_REPO_URL-es:latest
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /.*$COMMIT_MESSAGE.*/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

  when: manual
  


# Docker build stage
deploy_recette:
  stage: deploy_recette
  image: bash:latest
  script:
    - *base_ssh
    - echo "Deploying recette..."
    - ssh $SSH_USER@$SSH_HOST "mkdir -p /var/data/surfs-74-recette"
    - ssh $SSH_USER@$SSH_HOST "cd /var/data/surfs-74-recette && docker compose down --remove-orphans || true"
    - ssh $SSH_USER@$SSH_HOST "cd /var/data/surfs-74-recette && rm docker -rf"
    - scp -r ./docker $SSH_USER@$SSH_HOST:/var/data/surfs-74-recette/docker
    - scp -r $PORTAL_EXT $SSH_USER@$SSH_HOST:/var/data/surfs-74-recette/docker/configs/files/portal-ext.properties
    - scp -r $ACTIVATION_KEY $SSH_USER@$SSH_HOST:/var/data/surfs-74-recette/docker/configs/files/osgi/modules/activation-key-dxpdevelopment.xml
    - scp docker-compose.yml $SSH_USER@$SSH_HOST:/var/data/surfs-74-recette/docker-compose.yml
    - ssh $SSH_USER@$SSH_HOST "cd /var/data/surfs-74-recette && export SOURCE_DB_PASSWORD=$SOURCE_DB_PASSWORD && docker compose pull && docker compose up -d"
    - ssh $SSH_USER@$SSH_HOST "cd /var/data/surfs-74-recette/docker && bash ./wait-for-container.sh"
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /.*$COMMIT_MESSAGE.*/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  needs: ['docker_build_recette']

tests:
  stage: test
  image: mcr.microsoft.com/playwright:v1.46.1-jammy
  parallel: 3
  script:
    - cd test/playwright
    - npm ci
    - npx playwright test --shard=$CI_NODE_INDEX/$CI_NODE_TOTAL
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  artifacts:
    reports:
      junit: test/playwright/results.xml


